
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(predcovrds)  ## predicted transcript and junction coverage
[1] "alpine/20170918.A-WT_4/alpine_predicted_coverage.rds"
> print(txquants)  ## transcript quantification file
[1] "stringtie_onlyref/20170918.A-WT_4/20170918.A-WT_4.gtf"
> print(quantreadscript)  ## script containing a function "read_quant()"
[1] "Rscripts/read_quant_stringtie.R"
> print(strandspec)  ## "yes" or "no"
[1] "yes"
> print(tx2gene)  ## link transcripts to genes
[1] "reference/Homo_sapiens.GRCh38.90_tx2gene_ext.rds"
> print(method)  ## method ID to add to the quantification table
[1] "StringTie"
> print(outrds)  ## output file
[1] "alpine/20170918.A-WT_4/scaled_junction_coverage_StringTie.rds"
> 
> suppressPackageStartupMessages({
+   library(alpine)
+   library(parallel)
+   library(dplyr)
+ })
> 
> source(quantreadscript)
> 
> predcovs <- readRDS(predcovrds)
> quants <- read_quant(file = txquants, avefraglength = predcovs[[1]]$avefraglength)
Joining, by = "transcript_id"
> tx2gene <- readRDS(tx2gene)
> 
> idxtx <- grep("^STRG\\.", tx2gene$tx, invert = TRUE)
> tx2gene$tx[idxtx] <- gsub("\\.[0-9]+$", "", tx2gene$tx[idxtx])
> 
> idxgene <- grep("^STRG\\.", tx2gene$gene, invert = TRUE)
> tx2gene$gene[idxgene] <- gsub("\\.[0-9]+$", "", tx2gene$gene[idxgene])
> 
> transcripts <- names(predcovs)
> names(transcripts) <- transcripts
> 
> ## Go through all transcripts and scale predicted junction coverage by the
> ## estimated abundance
> scaledcovs <- lapply(transcripts, function(tx) {
+   tryCatch({
+     ab <- quants$count[quants$transcript == tx]
+     if (length(ab) == 0 || is.na(ab)) ab <- 0  ## if the transcript is not present in the quantification file
+     m <- predcovs[[tx]]$junctions
+     m$pred.cov <- m$pred.cov / max(1e-10, sum(predcovs[[tx]]$pred.cov)) * 
+       ab * predcovs[[tx]]$avefraglength
+     as.data.frame(m) %>% dplyr::mutate(transcript = tx)
+   }, error = function(e) NULL)
+ })
> 
> ## Combine estimates for all transcripts
> allcovs <- do.call(rbind, scaledcovs)
> if (strandspec == "no") {
+   allcovs$strand <- "*"
+ }
> 
> ## Sum coverages of the same junction from different transcripts. Each junction
> ## is present once per gene it is included in.
> allcovs <- allcovs %>%
+   dplyr::group_by(seqnames, start, end, strand) %>%
+   dplyr::mutate(pred.cov = sum(pred.cov)) %>%
+   dplyr::ungroup() %>%
+   dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), by = c("transcript" = "tx")) %>%
+   dplyr::group_by(seqnames, start, end, strand, gene) %>%
+   dplyr::mutate(transcript = paste(transcript, collapse = ",")) %>%
+   dplyr::ungroup() %>%
+   dplyr::distinct() %>% 
+   dplyr::mutate(method = method)
> 
> ## Get coverage "note" for each transcript
> covnotes <- sapply(transcripts, function(tx) {
+   predcovs[[tx]]$note
+ })
> 
> ## Add gene info to transcript quant table
> quants <- quants %>% dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), 
+                                       by = c("transcript" = "tx")) %>%
+   dplyr::mutate(method = method) %>% 
+   dplyr::left_join(data.frame(transcript = names(covnotes), 
+                               covnote = covnotes, 
+                               stringsAsFactors = FALSE), by = "transcript") %>%
+   dplyr::select(transcript, gene, symbol, count, TPM, method, covnote)
> 
> saveRDS(list(scaledcovs = scaledcovs, allcovs = allcovs, quants = quants), 
+         file = outrds)
> 
> sessionInfo()
R Under development (unstable) (2017-12-14 r73916)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/R/R-devel/lib/libRblas.so
LAPACK: /usr/local/R/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats4    parallel  stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] bindrcpp_0.2.2          GenomicFeatures_1.31.10 AnnotationDbi_1.41.5   
 [4] Biobase_2.39.2          rtracklayer_1.39.12     GenomicRanges_1.31.23  
 [7] GenomeInfoDb_1.15.5     IRanges_2.13.28         S4Vectors_0.17.42      
[10] BiocGenerics_0.26.0     dplyr_0.7.4             alpine_1.5.3           

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.16                pillar_1.2.1               
 [3] bindr_0.1.1                 compiler_3.5.0             
 [5] XVector_0.20.0              prettyunits_1.0.2          
 [7] bitops_1.0-6                tools_3.5.0                
 [9] zlibbioc_1.26.0             progress_1.1.2             
[11] biomaRt_2.35.13             digest_0.6.15              
[13] bit_1.1-12                  tibble_1.4.2               
[15] RSQLite_2.1.0               memoise_1.1.0              
[17] lattice_0.20-35             pkgconfig_2.0.1            
[19] rlang_0.2.0                 graph_1.57.1               
[21] Matrix_1.2-14               DelayedArray_0.5.30        
[23] DBI_0.8                     speedglm_0.3-2             
[25] GenomeInfoDbData_1.1.0      httr_1.3.1                 
[27] stringr_1.3.0               Biostrings_2.47.12         
[29] bit64_0.9-7                 grid_3.5.0                 
[31] glue_1.2.0                  R6_2.2.2                   
[33] RBGL_1.55.1                 XML_3.98-1.11              
[35] BiocParallel_1.13.3         blob_1.1.1                 
[37] magrittr_1.5                splines_3.5.0              
[39] MASS_7.3-49                 Rsamtools_1.31.3           
[41] matrixStats_0.53.1          GenomicAlignments_1.15.13  
[43] assertthat_0.2.0            SummarizedExperiment_1.9.16
[45] stringi_1.1.7               RCurl_1.95-4.10            
> date()
[1] "Mon May 21 00:48:05 2018"
> 
> proc.time()
     user    system   elapsed 
11698.820   334.772 12125.563 
