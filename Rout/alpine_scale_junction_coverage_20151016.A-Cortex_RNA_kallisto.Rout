
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(predcovrds)  ## predicted transcript and junction coverage
[1] "alpine/20151016.A-Cortex_RNA/alpine_predicted_coverage.rds"
> print(txquants)  ## transcript quantification file
[1] "kallisto/cDNAncRNA/20151016.A-Cortex_RNA/abundance.tsv"
> print(quantreadscript)  ## script containing a function "read_quant()"
[1] "Rscripts/read_quant_kallisto.R"
> print(strandspec)  ## "yes" or "no"
[1] "yes"
> print(tx2gene)  ## link transcripts to genes
[1] "reference/Homo_sapiens.GRCh38.90_tx2gene.rds"
> print(method)  ## method ID to add to the quantification table
[1] "kallisto"
> print(outrds)  ## output file
[1] "alpine/20151016.A-Cortex_RNA/scaled_junction_coverage_kallisto.rds"
> 
> suppressPackageStartupMessages(library(alpine))
Warning message:
package ‘alpine’ was built under R version 3.4.2 
> suppressPackageStartupMessages(library(parallel))
> suppressPackageStartupMessages(library(dplyr))
> 
> source(quantreadscript)
> 
> predcovs <- readRDS(predcovrds)
> quants <- read_quant(file = txquants, avefraglength = predcovs[[1]]$avefraglength)
> tx2gene <- readRDS(tx2gene)
> tx2gene$tx <- gsub("\\.[0-9]+", "", tx2gene$tx)
> tx2gene$gene <- gsub("\\.[0-9]+", "", tx2gene$gene)
> 
> transcripts <- names(predcovs)
> names(transcripts) <- transcripts
> 
> scaledcovs <- lapply(transcripts, function(tx) {
+   tryCatch({
+     ab <- quants$count[quants$transcript == tx]
+     m <- predcovs[[tx]]$junctions
+     m$pred.cov <- m$pred.cov / sum(predcovs[[tx]]$pred.cov) * 
+       ab * predcovs[[tx]]$avefraglength
+     as.data.frame(m) %>% dplyr::mutate(transcript = tx)
+   }, error = function(e) NULL)
+ })
> 
> allcovs <- do.call(rbind, scaledcovs)
> if (strandspec == "no") {
+   allcovs$strand <- "*"
+ }
> allcovs <- allcovs %>%
+   dplyr::group_by(seqnames, start, end, strand) %>%
+   dplyr::mutate(pred.cov = sum(pred.cov)) %>%
+   dplyr::ungroup() %>%
+   dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), by = c("transcript" = "tx")) %>%
+   dplyr::group_by(seqnames, start, end, strand, gene) %>%
+   dplyr::mutate(transcript = paste(transcript, collapse = ",")) %>%
+   dplyr::ungroup() %>%
+   dplyr::distinct() %>% 
+   dplyr::mutate(method = method)
> 
> quants <- quants %>% dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), 
+                                       by = c("transcript" = "tx")) %>%
+   dplyr::mutate(method = method) %>% 
+   dplyr::select(transcript, gene, symbol, count, TPM, method)
> 
> saveRDS(list(scaledcovs = scaledcovs, allcovs = allcovs, quants = quants), 
+         file = outrds)
> 
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] bindrcpp_0.2 dplyr_0.7.4  alpine_1.4.0

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.13               bindr_0.1                 
 [3] compiler_3.4.0             GenomeInfoDb_1.12.2       
 [5] XVector_0.16.0             GenomicFeatures_1.28.5    
 [7] bitops_1.0-6               tools_3.4.0               
 [9] zlibbioc_1.22.0            biomaRt_2.32.1            
[11] digest_0.6.12              bit_1.1-12                
[13] RSQLite_2.0                memoise_1.1.0             
[15] tibble_1.3.4               lattice_0.20-35           
[17] pkgconfig_2.0.1            rlang_0.1.2               
[19] Matrix_1.2-11              graph_1.54.0              
[21] DelayedArray_0.2.7         DBI_0.7                   
[23] speedglm_0.3-2             GenomeInfoDbData_0.99.0   
[25] stringr_1.2.0              rtracklayer_1.36.4        
[27] Biostrings_2.44.2          S4Vectors_0.14.5          
[29] IRanges_2.10.3             stats4_3.4.0              
[31] bit64_0.9-7                grid_3.4.0                
[33] glue_1.1.1                 Biobase_2.36.2            
[35] R6_2.2.2                   AnnotationDbi_1.38.2      
[37] XML_3.98-1.9               RBGL_1.52.0               
[39] BiocParallel_1.10.1        magrittr_1.5              
[41] blob_1.1.0                 splines_3.4.0             
[43] MASS_7.3-47                Rsamtools_1.28.0          
[45] matrixStats_0.52.2         GenomicAlignments_1.12.2  
[47] BiocGenerics_0.22.0        GenomicRanges_1.28.5      
[49] assertthat_0.2.0           SummarizedExperiment_1.6.5
[51] stringi_1.1.5              RCurl_1.95-4.8            
> date()
[1] "Sun Nov 19 22:06:19 2017"
> 
> proc.time()
    user   system  elapsed 
6569.437  232.058 6846.724 
