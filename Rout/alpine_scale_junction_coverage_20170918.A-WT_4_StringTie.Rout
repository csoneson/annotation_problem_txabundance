
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(predcovrds)  ## predicted transcript and junction coverage
[1] "alpine/20170918.A-WT_4/alpine_predicted_coverage.rds"
> print(txquants)  ## transcript quantification file
[1] "stringtie_onlyref/20170918.A-WT_4/20170918.A-WT_4.gtf"
> print(quantreadscript)  ## script containing a function "read_quant()"
[1] "Rscripts/read_quant_stringtie.R"
> print(strandspec)  ## "yes" or "no"
[1] "yes"
> print(tx2gene)  ## link transcripts to genes
[1] "reference/Homo_sapiens.GRCh38.90_tx2gene_ext.rds"
> print(method)  ## method ID to add to the quantification table
[1] "StringTie"
> print(outrds)  ## output file
[1] "alpine/20170918.A-WT_4/scaled_junction_coverage_StringTie.rds"
> 
> suppressPackageStartupMessages(library(alpine))
Warning message:
package 'alpine' was built under R version 3.4.2 
> suppressPackageStartupMessages(library(parallel))
> suppressPackageStartupMessages(library(dplyr))
> 
> source(quantreadscript)
> 
> predcovs <- readRDS(predcovrds)
> quants <- read_quant(file = txquants, avefraglength = predcovs[[1]]$avefraglength)
Joining, by = "transcript_id"
> tx2gene <- readRDS(tx2gene)
> tx2gene$tx <- gsub("\\.[0-9]+", "", tx2gene$tx)
> tx2gene$gene <- gsub("\\.[0-9]+", "", tx2gene$gene)
> 
> transcripts <- names(predcovs)
> names(transcripts) <- transcripts
> 
> ## Go through all transcripts and scale predicted junction coverage by the
> ## estimated abundance
> scaledcovs <- lapply(transcripts, function(tx) {
+   tryCatch({
+     ab <- quants$count[quants$transcript == tx]
+     if (is.na(ab)) ab <- 0
+     m <- predcovs[[tx]]$junctions
+     m$pred.cov <- m$pred.cov / max(1e-10, sum(predcovs[[tx]]$pred.cov)) * 
+       ab * predcovs[[tx]]$avefraglength
+     as.data.frame(m) %>% dplyr::mutate(transcript = tx)
+   }, error = function(e) NULL)
+ })
> 
> ## Combine estimates for all transcripts
> allcovs <- do.call(rbind, scaledcovs)
> if (strandspec == "no") {
+   allcovs$strand <- "*"
+ }
> 
> ## Add coverages of the same junction from different transcripts. Each junction
> ## is present once per gene it is included in.
> allcovs <- allcovs %>%
+   dplyr::group_by(seqnames, start, end, strand) %>%
+   dplyr::mutate(pred.cov = sum(pred.cov)) %>%
+   dplyr::ungroup() %>%
+   dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), by = c("transcript" = "tx")) %>%
+   dplyr::group_by(seqnames, start, end, strand, gene) %>%
+   dplyr::mutate(transcript = paste(transcript, collapse = ",")) %>%
+   dplyr::ungroup() %>%
+   dplyr::distinct() %>% 
+   dplyr::mutate(method = method)
> 
> ## Add gene info to transcript quant table
> quants <- quants %>% dplyr::left_join(tx2gene %>% dplyr::select(tx, gene, symbol), 
+                                       by = c("transcript" = "tx")) %>%
+   dplyr::mutate(method = method) %>% 
+   dplyr::select(transcript, gene, symbol, count, TPM, method)
> 
> saveRDS(list(scaledcovs = scaledcovs, allcovs = allcovs, quants = quants), 
+         file = outrds)
> 
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C                 LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats4    parallel  stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] bindrcpp_0.2           GenomicFeatures_1.28.5 AnnotationDbi_1.38.2  
 [4] Biobase_2.36.2         rtracklayer_1.36.4     GenomicRanges_1.28.5  
 [7] GenomeInfoDb_1.12.2    IRanges_2.10.3         S4Vectors_0.14.5      
[10] BiocGenerics_0.22.0    dplyr_0.7.4            alpine_1.4.0          

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.13               bindr_0.1                 
 [3] compiler_3.4.0             XVector_0.16.0            
 [5] bitops_1.0-6               tools_3.4.0               
 [7] zlibbioc_1.22.0            biomaRt_2.32.1            
 [9] digest_0.6.12              bit_1.1-12                
[11] RSQLite_2.0                memoise_1.1.0             
[13] tibble_1.3.4               lattice_0.20-35           
[15] pkgconfig_2.0.1            rlang_0.1.2               
[17] Matrix_1.2-11              graph_1.54.0              
[19] DelayedArray_0.2.7         DBI_0.7                   
[21] speedglm_0.3-2             GenomeInfoDbData_0.99.0   
[23] stringr_1.2.0              Biostrings_2.44.2         
[25] bit64_0.9-7                grid_3.4.0                
[27] glue_1.1.1                 R6_2.2.2                  
[29] XML_3.98-1.9               RBGL_1.52.0               
[31] BiocParallel_1.10.1        magrittr_1.5              
[33] blob_1.1.0                 splines_3.4.0             
[35] MASS_7.3-47                Rsamtools_1.28.0          
[37] matrixStats_0.52.2         GenomicAlignments_1.12.2  
[39] assertthat_0.2.0           SummarizedExperiment_1.6.5
[41] stringi_1.1.5              RCurl_1.95-4.8            
> date()
[1] "Wed Jan 17 16:11:09 2018"
> 
> proc.time()
    user   system  elapsed 
6192.557  297.075 6560.910 
