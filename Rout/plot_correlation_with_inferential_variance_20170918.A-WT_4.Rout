
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(scorerds)
[1] "output/20170918.A-WT_4_combined_coverages_with_scores.rds"
> print(salmondir)
[1] "salmon/cDNAncRNA/20170918.A-WT_4"
> print(tx2gene)
[1] "reference/Homo_sapiens.GRCh38.90_tx2gene.rds"
> print(outrds)
[1] "figures/correlation_with_inferential_variance/correlation_with_inferential_variance_20170918.A-WT_4.rds"
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(cowplot)
+   library(tximport)
+ })
> 
> ## Read scores
> scores <- readRDS(scorerds)$genes
> 
> ## Read bootstrap counts on transcript level
> tx2gene <- readRDS(tx2gene)
> salmonres <- tximport(paste0(salmondir, "/quant.sf"), type = "salmon", txOut = TRUE)
reading in files with read_tsv
1 
> bootcounts <- salmonres$infReps[[1]]
> rownames(bootcounts) <- rownames(salmonres$counts)
> 
> ## Summarize counts on gene level
> bootcounts_gene <- as.data.frame(bootcounts) %>% tibble::rownames_to_column("tx") %>%
+   dplyr::left_join(tx2gene %>% dplyr::select(tx, gene), by = "tx") %>%
+   dplyr::select(-tx) %>% dplyr::group_by(gene) %>% dplyr::summarize_all(funs(sum)) %>%
+   as.data.frame() %>% tibble::column_to_rownames(var = "gene")
> rownames(bootcounts_gene) <- gsub("\\.[0-9]+$", "", rownames(bootcounts_gene))
> 
> ## Calculate coefficient of variation for each transcript and gene
> cv_tx <- apply(bootcounts, 1, sd)/apply(bootcounts, 1, mean)
> cv_tx[is.na(cv_tx)] <- 0
> cv_gene <- apply(bootcounts_gene, 1, sd)/apply(bootcounts_gene, 1, mean)
> cv_gene[is.na(cv_gene)] <- 0
> 
> ## Merge with score information. For transcripts, we use the score for the
> ## corresponding gene
> df_tx <- data.frame(tx = names(cv_tx), CV = cv_tx, stringsAsFactors = FALSE) %>%
+   dplyr::left_join(tx2gene %>% dplyr::select(tx, gene)) %>%
+   dplyr::mutate(tx = gsub("\\.[0-9]+$", "", tx),
+                 gene = gsub("\\.[0-9]+$", "", gene)) %>% 
+   dplyr::inner_join(scores %>% dplyr::filter(method == "Salmon" & count > 1000 & uniqjuncfraction >= 0.75) %>%
+                       dplyr::select(gene, score))
Joining, by = "tx"
Joining, by = "gene"
> 
> df_gene <- scores %>% dplyr::filter(method == "Salmon" & count > 1000 & uniqjuncfraction >= 0.75) %>% 
+   dplyr::select(gene, score) %>%
+   dplyr::inner_join(data.frame(gene = names(cv_gene), CV = cv_gene, stringsAsFactors = FALSE))
Joining, by = "gene"
> 
> ## Plot
> png(gsub("rds$", "png", outrds), width = 6, height = 12, unit = "in", res = 300)
> cowplot::plot_grid(
+   ggplot(df_tx, aes(x = CV, y = score)) + 
+     geom_point(alpha = 0.3, size = 1) + geom_smooth() + 
+     theme_bw() + ggtitle("Transcript"),
+   
+   ggplot(df_gene, aes(x = CV, y = score)) + 
+     geom_point(alpha = 0.3, size = 1) + geom_smooth(data = df_gene %>% dplyr::filter(CV < 0.04)) + 
+     theme_bw() + ggtitle("Gene"),
+   
+   ncol = 1
+ )
`geom_smooth()` using method = 'gam'
`geom_smooth()` using method = 'gam'
Warning messages:
1: Removed 1135 rows containing non-finite values (stat_smooth). 
2: Removed 1135 rows containing missing values (geom_point). 
3: Removed 189 rows containing non-finite values (stat_smooth). 
4: Removed 228 rows containing missing values (geom_point). 
> dev.off()
null device 
          1 
> 
> saveRDS(NULL, file = outrds)
> date()
[1] "Mon May 14 12:59:41 2018"
> sessionInfo()
R Under development (unstable) (2017-12-14 r73916)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/R/R-devel/lib/libRblas.so
LAPACK: /usr/local/R/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2.2  tximport_1.7.14 cowplot_0.9.2   ggplot2_2.2.1  
[5] dplyr_0.7.4    

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.16     bindr_0.1.1      magrittr_1.5     hms_0.4.2       
 [5] munsell_0.4.3    lattice_0.20-35  colorspace_1.3-2 R6_2.2.2        
 [9] rlang_0.2.0      plyr_1.8.4       tools_3.5.0      grid_3.5.0      
[13] gtable_0.2.0     nlme_3.1-134     mgcv_1.8-23      lazyeval_0.2.1  
[17] assertthat_0.2.0 tibble_1.4.2     Matrix_1.2-14    readr_1.1.1     
[21] glue_1.2.0       labeling_0.3     compiler_3.5.0   pillar_1.2.1    
[25] scales_0.5.0     jsonlite_1.5     pkgconfig_2.0.1 
> 
> proc.time()
   user  system elapsed 
 81.320   7.616  89.319 
