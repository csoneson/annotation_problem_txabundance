
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(covrds)
[1] "alpine/20170918.A-WT_4/alpine_combined_coverages.rds"
> print(gexrds)  ## gene expression
[1] "alpine/20170918.A-WT_4/alpine_gene_expression.rds"
> print(geneinfords)  ## gene information
[1] "output/characterize_genes.rds"
> print(outrds)  ## output file
[1] "alpine/20170918.A-WT_4/20170918.A-WT_4_gene_scores.rds"
> 
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(ggplot2))
> 
> cov <- readRDS(covrds)
> gex <- readRDS(gexrds)
> geneinfo <- readRDS(geneinfords)
> 
> jcovscaled <- cov$jcovscaled
> 
> ## Calculate the fraction of multimapping junction reads for each gene
> mmfrac <- jcovscaled %>% dplyr::select(junctionid, gene, uniqreads, mmreads) %>%
+   dplyr::distinct() %>% dplyr::group_by(gene) %>% 
+   dplyr::summarize(mmreads = sum(mmreads), uniqreads = sum(uniqreads)) %>% 
+   dplyr::mutate(mmfraction = mmreads/(mmreads + uniqreads)) %>%
+   dplyr::select(gene, mmfraction)
> 
> ## Get the score for each gene
> gene_scores <- jcovscaled %>% dplyr::select(gene, method, score) %>% 
+   dplyr::distinct() %>%
+   dplyr::left_join(mmfrac, by = "gene") %>%
+   dplyr::left_join(geneinfo, by = c("gene" = "gene_id")) %>%
+   dplyr::left_join(gex) %>%
+   dplyr::group_by(gene) %>%
+   dplyr::left_join(gex %>% dplyr::filter(method == "Salmon") %>% 
+                      dplyr::select(gene, count) %>% dplyr::rename(salmon_count = count))
Joining, by = c("gene", "method")
Joining, by = "gene"
> 
> ## Create gene categories
> gene_scores <- gene_scores %>% dplyr::mutate(all_genes = 1) %>%
+   dplyr::mutate(many_multimap = as.numeric(mmfraction > 0.5)) %>%
+   dplyr::mutate(high_expr_few_multimap = as.numeric(salmon_count > 1000 & 
+                                                       mmfraction < 0.5)) %>%
+   dplyr::mutate(high_expression = as.numeric(salmon_count > 1000)) %>%
+   dplyr::mutate(high_expr_length_diff_utr = as.numeric(salmon_count > 1000 & 
+                                                          length_diff_3putrs_samestart > 1000)) %>%
+   dplyr::mutate(high_expr_many_junctions = as.numeric(salmon_count > 1000 & ave_nbr_exons > 8))
> 
> gene_plot <- gene_scores %>% dplyr::select(gene, method, score, all_genes, high_expression,
+                                            high_expr_length_diff_utr, high_expr_few_multimap, 
+                                            high_expr_many_junctions, many_multimap) %>%
+   tidyr::gather(group, included, -gene, -score, -method) %>% dplyr::filter(included == 1)
> 
> 
> pdf(gsub("rds$", "pdf", outrds), width = 14)
> print(ggplot(gene_plot, 
+              aes(x = score, color = method)) + geom_density() + theme_bw() + 
+         ggtitle("Score distribution") + facet_wrap(~ group) + 
+         scale_color_manual(values = c("#DC050C", "#7BAFDE", "#B17BA6", "#F1932D",
+                                       "#4EB265", "#CAEDAB", "#777777", "#E8601C",
+                                       "#1965B0", "#882E72", "#F6C141", "#F7EE55",
+                                       "#90C987")[seq_len(length(unique(jcovscaled$method)))]))
Warning message:
Removed 136385 rows containing non-finite values (stat_density). 
> print(ggplot(gene_plot, 
+              aes(x = score, color = group)) + geom_density() + theme_bw() + 
+         ggtitle("Score distribution") + facet_wrap(~ method))
Warning message:
Removed 136385 rows containing non-finite values (stat_density). 
> print(ggplot(gene_plot, 
+              aes(x = method, y = score, color = method)) + geom_boxplot() + theme_bw() + 
+         theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) + 
+         ggtitle("Score distribution") + facet_wrap(~ group) +  
+         scale_color_manual(values = c("#DC050C", "#7BAFDE", "#B17BA6", "#F1932D",
+                                       "#4EB265", "#CAEDAB", "#777777", "#E8601C",
+                                       "#1965B0", "#882E72", "#F6C141", "#F7EE55",
+                                       "#90C987")[seq_len(length(unique(jcovscaled$method)))]))
Warning message:
Removed 136385 rows containing non-finite values (stat_boxplot). 
> print(ggplot(gene_plot, 
+              aes(x = group, y = score, color = method)) + geom_boxplot() + theme_bw() + 
+         theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) + 
+         ggtitle("Score distribution") + facet_wrap(~ method) +  
+         scale_color_manual(values = c("#DC050C", "#7BAFDE", "#B17BA6", "#F1932D",
+                                       "#4EB265", "#CAEDAB", "#777777", "#E8601C",
+                                       "#1965B0", "#882E72", "#F6C141", "#F7EE55",
+                                       "#90C987")[seq_len(length(unique(jcovscaled$method)))]))
Warning message:
Removed 136385 rows containing non-finite values (stat_boxplot). 
> ## Rank distribution (1 is best)
> print(ggplot(gene_plot %>% 
+                dplyr::mutate(score = replace(score, is.na(score), 10)) %>% 
+                dplyr::group_by(gene, group) %>% dplyr::mutate(rank = rank(score)) %>%
+                dplyr::mutate(keep = !(var(rank) == 0)) %>% dplyr::filter(keep), 
+              aes(x = rank)) + geom_bar() + 
+         facet_grid(group ~ method, scales = "free_y") + theme_bw() + 
+         ggtitle("Rank distribution"))
> 
> dev.off()
null device 
          1 
> 
> saveRDS(NULL, file = outrds)
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2  ggplot2_2.2.1 dplyr_0.7.4  

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.13     bindr_0.1        magrittr_1.5     tidyselect_0.2.0
 [5] munsell_0.4.3    colorspace_1.3-2 R6_2.2.2         rlang_0.1.2     
 [9] stringr_1.2.0    plyr_1.8.4       tools_3.4.0      grid_3.4.0      
[13] gtable_0.2.0     lazyeval_0.2.0   assertthat_0.2.0 digest_0.6.12   
[17] tibble_1.3.4     purrr_0.2.3      reshape2_1.4.2   tidyr_0.7.1     
[21] glue_1.1.1       labeling_0.3     stringi_1.1.5    compiler_3.4.0  
[25] scales_0.5.0     pkgconfig_2.0.1 
> date()
[1] "Sat Feb  3 00:18:53 2018"
> 
> proc.time()
   user  system elapsed 
 69.297   1.085  70.449 
