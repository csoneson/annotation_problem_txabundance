
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(gene)
[1] "ENSG00000214013"
> print(bam)
[1] "STAR/20151016.A-Cortex_RNA/20151016.A-Cortex_RNA_Aligned.sortedByCoord.out.bam"
> print(bw)
[1] "STARbigwig/20151016.A-Cortex_RNA_Aligned.sortedByCoord.out.bw"
> print(genemodels)
[1] "alpine/alpine_genemodels.rds"
> print(quantsf)
[1] "salmon/cDNA/20151016.A-Cortex_RNA/quant.sf"
> print(biasmodels)
[1] "alpine/alpine_fitbiasmodel.rds"
> print(outrds)
[1] "alpine_out/ENSG00000214013.rds"
> 
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(alpine))
> suppressPackageStartupMessages(library(GenomicAlignments))
> suppressPackageStartupMessages(library(BSgenome.Hsapiens.NCBI.GRCh38))
> suppressPackageStartupMessages(library(ggplot2))
> suppressPackageStartupMessages(library(cowplot))
> suppressPackageStartupMessages(library(ggrepel))
> suppressPackageStartupMessages(library(grid))
> suppressPackageStartupMessages(library(gridExtra))
> 
> source("Rscripts/plot_tracks.R")
> 
> ## Read gene models for plot (pregenerated from gtf to save time)
> genemodels <- readRDS(genemodels)
> quantsf <- genemodels$quantsf
> 
> ## Read bias model parameters and gene models
> biasmodels <- readRDS(biasmodels)
> fitpar <- biasmodels$fitpar
> ebt0 <- biasmodels$ebt0
> txps <- biasmodels$txps
> 
> ## Estimate average fragment length
> avefraglength <- sum(fitpar$`1`$fraglen.density$x * fitpar$`1`$fraglen.density$y/sum(fitpar$`1`$fraglen.density$y))
> 
> ## Get transcripts for gene of interest
> txlist <- names(subset(txps, gene_id == gene))
> stopifnot(length(txlist) > 0)
> names(txlist) <- txlist
> 
> ## Load bam file 
> bam.files <- bam
> names(bam.files) <- "1"
> 
> ## Predict coverage for each transcript
> pred.cov <- lapply(txlist, function(tx) {
+   message(tx)
+   ## Get transcript model
+   txmod <- ebt0[[tx]]
+   
+   pc <- tryCatch({
+     m <- predictCoverage(gene = txmod,
+                          bam.files = bam.files,
+                          fitpar = fitpar,
+                          genome = Hsapiens,
+                          model.names = "all")
+     ## Scale predicted coverage to agree with Salmon's estimated count
+     m$`1`$pred.cov$all <- m$`1`$pred.cov$all/sum(m$`1`$pred.cov$all) * quantsf$NumReads[quantsf$Name == tx] * avefraglength
+     m
+   }, error = function(e) NULL)
+   pc
+ })
ENST00000561871
ENST00000562170
ENST00000562859
ENST00000566442
ENST00000440615
ENST00000318010
ENST00000567784
ENST00000570013
ENST00000568687
ENST00000567421
ENST00000568953
ENST00000567596
ENST00000566690
> 
> junctionlist <- lapply(txlist, function(tx) {
+   txmod <- sort(ebt0[[tx]])
+   junctions <- GenomicRanges::setdiff(range(txmod), txmod)
+   if (all(strand(txmod) == "+")) {
+     junctionpos <- cumsum(width(txmod))
+     junctionpos <- junctionpos[-length(junctionpos)]
+     junctioncov <- as.numeric(pred.cov[[tx]]$"1"$pred.cov$all)[junctionpos]
+   } else if (all(strand(txmod) == "-")) {
+     junctionpos <- cumsum(width(rev(txmod)))
+     junctionpos <- junctionpos[-length(junctionpos)]
+     junctioncov <- as.numeric(pred.cov[[tx]]$"1"$pred.cov$all)[junctionpos]
+     junctioncov <- rev(junctioncov)
+   } else {
+     stop("Unknown or mixed strand")
+   }
+   mcols(junctions)$coverage <- junctioncov
+   junctions
+ })
> 
> jl <- do.call(rbind, lapply(junctionlist, as.data.frame)) %>% 
+   dplyr::group_by(seqnames, start, end, width, strand) %>%
+   dplyr::summarize(coverage = sum(coverage, na.rm = TRUE)) %>% ungroup() %>%
+   dplyr::mutate(coverage = replace(coverage, is.na(coverage), 0))
> 
> jl <- dplyr::left_join(jl, genemodels$jcov) %>%
+   dplyr::mutate(uniqreads = replace(uniqreads, is.na(uniqreads), 0),
+                 mmreads = replace(mmreads, is.na(mmreads), 0)) %>%
+   dplyr::mutate(scaledcoverage = coverage/sum(coverage, na.rm = TRUE) * sum(uniqreads, na.rm = TRUE)) %>%
+   dplyr::mutate(junctionid = paste0("J", seq_len(length(scaledcoverage)))) %>%
+   dplyr::select(junctionid, everything())
Joining, by = c("seqnames", "start", "end", "strand")
Warning messages:
1: Column `seqnames` joining factor and character vector, coercing into character vector 
2: Column `strand` joining factor and character vector, coercing into character vector 
> 
> pdf(gsub("rds$", "pdf", outrds), width = 12, height = 10)
> tryCatch({
+   plot_tracks(mygene = gene, genemodels = genemodels$genemodels_exon, 
+               genemodels2 = genemodels$genemodels_cds, 
+               gtf_file = NULL, rnaseq_datafiles = structure(bw, names = "s1"), 
+               rnaseq_condition = structure("g1", names = "s1"), show_chr = NULL, 
+               min_coord = NULL, max_coord = NULL, 
+               pdf_filename = NULL, pdf_width = 7, pdf_height = 7)
+ }, error = function(e) message(e))
> 
> grid.newpage()
> grid.table(quantsf %>% dplyr::filter(Name %in% txlist))
> 
> grid.newpage()
> grid.table(jl %>% dplyr::select(junctionid, seqnames, start, end, width, strand, 
+                                 uniqreads, mmreads, scaledcoverage))
> 
> print(ggplot(jl, aes(x = scaledcoverage, y = uniqreads, label = junctionid)) + 
+         geom_point(size = 4) + geom_label_repel() + 
+         geom_abline(intercept = 0, slope = 1) + 
+         ggtitle(paste0("score = ", round(sum(abs(jl$uniqreads - jl$scaledcoverage), 
+                                                  na.rm = TRUE)/sum(jl$uniqreads, na.rm = TRUE), 2))) + 
+         xlab("Scaled predicted coverage") + ylab("Number of uniquely mapped reads"))
> dev.off()
null device 
          1 
> 
> # print(sort(fit$residuals))
> write.table(jl %>% dplyr::mutate(difference = uniqreads - scaledcoverage) %>%
+   dplyr::mutate(ranking = order(order(difference))) %>%
+     dplyr::mutate(coverage = round(coverage, 2),
+                   scaledcoverage = round(scaledcoverage, 2),
+                   difference = round(difference, 2)), 
+   file = gsub("rds$", "txt", outrds),
+   quote = FALSE, row.names = FALSE, col.names = TRUE, sep = "\t")
> print(as.data.frame(jl))
   junctionid seqnames    start      end width strand  coverage uniqreads
1          J1       15 42273445 42274167   723      +  6.855109         2
2          J2       15 42273612 42274167   556      +  3.183596         4
3          J3       15 42273830 42274167   338      +  5.342472         0
4          J4       15 42274045 42274167   123      +  9.217563         4
5          J5       15 42274511 42276347  1837      + 81.519707        42
6          J6       15 42276411 42278024  1614      + 11.756023        16
7          J7       15 42276411 42278481  2071      + 75.021609        26
8          J8       15 42278089 42278481   393      + 11.667562         6
9          J9       15 42278591 42280916  2326      + 36.852455        21
10        J10       15 42278591 42283610  5020      +  3.787536         0
11        J11       15 42278591 42287690  9100      + 45.212895        35
12        J12       15 42281134 42283610  2477      + 31.850706        37
13        J13       15 42287819 42292734  4916      + 47.918480        36
14        J14       15 42292918 42297610  4693      + 53.121366        42
15        J15       15 42297657 42306545  8889      + 51.156391        42
16        J16       15 42306613 42308221  1609      + 53.110572        37
17        J17       15 42308319 42310282  1964      + 46.491611        30
18        J18       15 42310464 42310692   229      + 44.328640        25
19        J19       15 42310847 42314079  3233      + 19.098903         5
20        J20       15 42310847 42321784 10938      + 28.475855        35
21        J21       15 42322021 42326297  4277      + 26.821321        35
22        J22       15 42326425 42327362   938      + 30.839432        13
23        J23       15 42327443 42329305  1863      + 25.589206        27
24        J24       15 42329450 42330575  1126      + 18.884009        31
25        J25       15 42330673 42338388  7716      + 15.261742        26
26        J26       15 42338491 42339668  1178      + 11.786840        21
27        J27       15 42339913 42340689   777      + 16.332686        19
28        J28       15 42340755 42343077  2323      + 16.806545        18
29        J29       15 42343155 42345757  2603      + 21.379650        18
30        J30       15 42343412 42345757  2346      +  0.000000         0
31        J31       15 42344912 42345757   846      + 23.088482         0
32        J32       15 42345833 42348102  2270      + 45.538482        34
33        J33       15 42348217 42349382  1166      + 41.484517        45
34        J34       15 42349496 42351328  1833      + 43.240900        36
35        J35       15 42351433 42352029   597      + 27.037090        57
   mmreads scaledcoverage
1        0       5.490423
2        0       2.549819
3        0       4.278916
4        0       7.382570
5        0      65.291111
6        1       9.415684
7        0      60.086626
8        1       9.344833
9        0      29.516025
10       0       3.033530
11       0      36.212104
12       0      25.510003
13       0      38.379073
14       0      42.546190
15       0      40.972394
16       0      42.537545
17       0      37.236259
18       0      35.503883
19       0      15.296774
20       0      22.807003
21       0      21.481846
22       0      24.700049
23       0      20.495016
24       0      15.124661
25       0      12.223499
26       0       9.440366
27       0      13.081244
28       0      13.460770
29       0      17.123480
30       0       0.000000
31       0      18.492125
32       0      36.472875
33       0      33.225956
34       0      34.632685
35       0      21.654661
> 
> saveRDS(NULL, outrds)
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
 [1] grid      stats4    parallel  stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
 [1] bindrcpp_0.2                          
 [2] Gviz_1.20.0                           
 [3] gridExtra_2.3                         
 [4] ggrepel_0.7.0                         
 [5] cowplot_0.8.0                         
 [6] ggplot2_2.2.1                         
 [7] BSgenome.Hsapiens.NCBI.GRCh38_1.3.1000
 [8] BSgenome_1.44.2                       
 [9] rtracklayer_1.36.4                    
[10] GenomicAlignments_1.12.2              
[11] Rsamtools_1.28.0                      
[12] Biostrings_2.44.2                     
[13] XVector_0.16.0                        
[14] SummarizedExperiment_1.6.5            
[15] DelayedArray_0.2.7                    
[16] matrixStats_0.52.2                    
[17] Biobase_2.36.2                        
[18] GenomicRanges_1.28.5                  
[19] GenomeInfoDb_1.12.2                   
[20] IRanges_2.10.3                        
[21] S4Vectors_0.14.5                      
[22] BiocGenerics_0.22.0                   
[23] alpine_1.2.0                          
[24] dplyr_0.7.4                           

loaded via a namespace (and not attached):
 [1] ProtGenerics_1.8.0            bitops_1.0-6                 
 [3] bit64_0.9-7                   RColorBrewer_1.1-2           
 [5] httr_1.3.1                    tools_3.4.0                  
 [7] backports_1.1.1               R6_2.2.2                     
 [9] rpart_4.1-11                  Hmisc_4.0-3                  
[11] DBI_0.7                       lazyeval_0.2.0               
[13] colorspace_1.3-2              nnet_7.3-12                  
[15] curl_2.8.1                    bit_1.1-12                   
[17] compiler_3.4.0                graph_1.54.0                 
[19] htmlTable_1.9                 labeling_0.3                 
[21] scales_0.5.0                  checkmate_1.8.4              
[23] RBGL_1.52.0                   speedglm_0.3-2               
[25] stringr_1.2.0                 digest_0.6.12                
[27] foreign_0.8-69                base64enc_0.1-3              
[29] dichromat_2.0-0               pkgconfig_2.0.1              
[31] htmltools_0.3.6               ensembldb_2.0.4              
[33] htmlwidgets_0.9               rlang_0.1.2                  
[35] RSQLite_2.0                   BiocInstaller_1.26.1         
[37] shiny_1.0.5                   bindr_0.1                    
[39] BiocParallel_1.10.1           acepack_1.4.1                
[41] VariantAnnotation_1.22.3      RCurl_1.95-4.8               
[43] magrittr_1.5                  GenomeInfoDbData_0.99.0      
[45] Formula_1.2-2                 Matrix_1.2-11                
[47] Rcpp_0.12.13                  munsell_0.4.3                
[49] stringi_1.1.5                 yaml_2.1.14                  
[51] MASS_7.3-47                   zlibbioc_1.22.0              
[53] plyr_1.8.4                    AnnotationHub_2.8.2          
[55] blob_1.1.0                    lattice_0.20-35              
[57] splines_3.4.0                 GenomicFeatures_1.28.5       
[59] knitr_1.17                    biomaRt_2.32.1               
[61] XML_3.98-1.9                  glue_1.1.1                   
[63] biovizBase_1.24.0             latticeExtra_0.6-28          
[65] data.table_1.10.4             httpuv_1.3.5                 
[67] gtable_0.2.0                  assertthat_0.2.0             
[69] mime_0.5                      xtable_1.8-2                 
[71] AnnotationFilter_1.0.0        survival_2.41-3              
[73] tibble_1.3.4                  AnnotationDbi_1.38.2         
[75] memoise_1.1.0                 cluster_2.0.6                
[77] interactiveDisplayBase_1.14.0
> date()
[1] "Wed Nov  1 20:55:18 2017"
> 
> 
> proc.time()
   user  system elapsed 
267.956  18.833 289.502 
