
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(predcov1)
[1] "alpine/20151016.A-Cortex_RNA/alpine_predicted_coverage.rds"
> print(predcov2)
[1] "alpine/20170918.A-WT_4/alpine_predicted_coverage.rds"
> print(outrds)
[1] "figures/predicted_coverage_pattern_comparison/predicted_coverage_pattern_comparison_20151016.A-Cortex_RNA_20170918.A-WT_4.rds"
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(GenomicRanges)
+ })
> 
> predcov1 <- readRDS(predcov1)
> predcov2 <- readRDS(predcov2)
> 
> transcripts <- intersect(names(predcov1), names(predcov2))
> 
> ## Calculate correlation between coverage patterns
> cov_corrs <- sapply(transcripts, function(tx) {
+   c1 <- predcov1[[tx]]$pred.cov
+   c2 <- predcov2[[tx]]$pred.cov
+   if (!is.null(c1) && !(is.null(c2)))
+     cor(c1, c2)
+   else
+     NA
+ })
> 
> ## Check whether any of the coverage patterns is uniform (if the prediction failed)
> cov_types <- sapply(transcripts, function(tx) {
+   c1 <- predcov1[[tx]]$note
+   c2 <- predcov2[[tx]]$note
+   if (c1 == "covOK" && c2 == "covOK")
+     "noneUniform"
+   else if (all(c(c1, c2) != "covOK"))
+     "bothUniform"
+   else 
+     "oneUniform"
+ })
> 
> ## Fraction NA correlations
> mean(is.na(cov_corrs))
[1] 0.3838301
> 
> ## Plot
> df <- data.frame(transcript = names(cov_corrs),
+                  cov_corrs = cov_corrs,
+                  cov_types = cov_types,
+                  stringsAsFactors = FALSE)
> 
> pdf(gsub("rds$", "pdf", outrds))
> print(ggplot(df, aes(x = cov_corrs)) + geom_histogram(bins = 100, fill = "lightblue") + 
+         theme_bw() + xlab("Correlation of coverage patterns between samples") + 
+         ylab("Frequency"))
Warning message:
Removed 76885 rows containing non-finite values (stat_bin). 
> print(ggplot(df, aes(x = cov_corrs)) + geom_histogram(bins = 100, fill = "lightblue") + 
+         theme_bw() + xlab("Correlation of coverage patterns between samples") + 
+         ylab("Frequency") + facet_wrap(cov_types, ncol = 1))
Error in combine_vars(data, params$plot_env, vars, drop = params$drop) : 
  At least one layer must contain all variables used for facetting
Calls: print ... f -> <Anonymous> -> f -> <Anonymous> -> combine_vars
Execution halted
