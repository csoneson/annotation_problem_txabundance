
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> ##                                                                            ##
> ## Plot the accuracy of transcript abundance estimates (for simulated data)   ##
> ## and the correlation between the abundance estimates for different methods  ##
> ##                                                                            ##
> ## Inputs:                                                                    ##
> ## * scorerds: list containing abundance estimates and characteristics for    ##
> ##             junctions, transcripts and genes, as well as gene scores.      ##
> ##             Generated by calculate_gene_scores.R                           ##
> ## * quantmethods: string containing the quantification methods to consider,  ##
> ##                 separated by commas (no spaces)                            ##
> ## * truthrda: the file generated by polyester, containing true transcript    ##
> ##             abundances (or '' if not a simulated data set)                 ##
> ## * truthmodgenesrds: vector with the names of the genes whose transcripts   ##
> ##                     have been altered (or '' if not a simulated data set)  ##
> ## * outrds: output rds file. The name will be used to determine the name of  ##
> ##           the output figures.                                              ##
> ##                                                                            ##
> ## Outputs:                                                                   ##
> ## * A png figure with a pairs plot showing the association between           ##
> ##   abundance estimates from different methods                               ##
> ## * A png figure showing the association between abundance estimates and     ##
> ##   true abundances                                                          ##
> ##                                                                            ##
> ################################################################################
> 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> quantmethods <- strsplit(quantmethods, ",")[[1]]
> 
> print(scorerds)
[1] "output/20151016.A-Cortex_RNA_combined_coverages_with_scores.rds"
> print(quantmethods)
[1] "hera"          "kallisto"      "RSEM"          "Salmon"       
[5] "SalmonSTAR"    "SalmonCDS"     "SalmonKeepDup" "StringTie"    
> print(truthrda)
[1] ""
> print(truthmodgenesrds)
[1] ""
> print(outrds)
[1] "figures/correlation_with_true_abundances/correlation_with_true_abundances_20151016.A-Cortex_RNA.rds"
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(tidyr)
+   library(ggplot2)
+   library(cowplot)
+   library(GGally)
+ })
> 
> source("Rscripts/helper_plot_functions.R")
> 
> ## Read transcript abundance estimates
> estimates <- readRDS(scorerds)$transcripts %>% 
+   dplyr::select(transcript, gene, count, method) %>%
+   dplyr::filter(method %in% quantmethods)
> 
> ## Pairs plots
> png(gsub("\\.rds$", "_transcripts_pairs.png", outrds), width = 12, height = 12,
+     unit = "in", res = 300)
> toplot <- estimates %>% dplyr::select(-gene) %>% 
+   tidyr::spread(method, count) %>% dplyr::select(-transcript)
> print(ggpairs(toplot, 
+               lower = list(continuous = wrap("points", alpha = 0.3, size = 0.25)),
+               upper = list(continuous = combinecor)) + 
+         theme_bw())
There were 36 warnings (use warnings() to see them)
> dev.off()
null device 
          1 
> 
> png(gsub("\\.rds$", "_genes_pairs.png", outrds), width = 12, height = 12,
+     unit = "in", res = 300)
> toplot <- estimates %>% dplyr::select(-transcript) %>% 
+   dplyr::group_by(gene, method) %>% dplyr::summarize(count = sum(count)) %>% 
+   dplyr::ungroup() %>% tidyr::spread(method, count) %>% dplyr::select(-gene)
> print(ggpairs(toplot, 
+               lower = list(continuous = wrap("points", alpha = 0.3, size = 0.25)),
+               upper = list(continuous = combinecor)) + 
+         theme_bw())
There were 36 warnings (use warnings() to see them)
> dev.off()
null device 
          1 
> 
> if (truthrda != '' && truthmodgenesrds != '') {
+   ## Read true (simulated) abundance estimates
+   load(truthrda)  ## counts_matrix
+   truth <- as.data.frame(counts_matrix) %>% dplyr::select(sample_01) %>%
+     tibble::rownames_to_column("transcript") %>% dplyr::rename(truth = sample_01)
+   
+   ## Merge
+   merged <- estimates %>% tidyr::spread(method, count) %>% 
+     dplyr::full_join(truth, by = c("transcript")) %>%
+     replace(., is.na(.), 0) %>%
+     tidyr::gather(method, count, -transcript, -gene, -truth)
+   
+   ## Add gene annotation for modified transcripts
+   idx <- grep("utrfrom", merged$transcript)
+   for (i in idx) {
+     merged$gene[i] <- merged$gene[match(strsplit(merged$transcript[i], "_")[[1]][1], 
+                                         merged$transcript)]
+   }
+   
+   ## Add label for genes whose transcripts are modified
+   truthmodgenes <- readRDS(truthmodgenesrds)
+   merged <- merged %>% dplyr::mutate(modified_gene = gene %in% truthmodgenes)
+   
+   ## Plot estimated vs true counts
+   ## Transcripts
+   corrs <- merged %>% dplyr::group_by(method) %>% 
+     dplyr::summarize(pearson = signif(cor(truth, count, method = "pearson", 
+                                           use = "pairwise.complete.obs"), 3),
+                      spearman = signif(cor(truth, count, method = "spearman", 
+                                            use = "pairwise.complete.obs"), 3))
+   png(gsub("\\.rds$", "_transcripts.png", outrds), width = 12, height = 12, 
+       unit = "in", res = 300)
+   print(ggplot(merged, aes(x = truth, y = count)) + 
+           geom_abline(slope = 1, intercept = 0) + ggtitle("Transcript") + 
+           geom_point(alpha = 0.3, size = 0.5, aes(color = modified_gene)) + theme_bw() + 
+           geom_label(data = corrs, x = -Inf, y = Inf, hjust = -0.05, vjust = 1.1, 
+                      aes(label = paste0("Pearson: ", pearson, "\nSpearman: ", spearman))) + 
+           facet_wrap(~ method) + xlab("True count") + ylab("Estimated count"))
+   dev.off()
+   
+   ## Genes
+   mergedgene <- merged %>% dplyr::group_by(method, gene) %>% 
+     dplyr::summarize(truth = sum(truth), count = sum(count),
+                      modified_gene = unique(modified_gene))
+   corrsgene <- mergedgene %>% dplyr::group_by(method) %>% 
+     dplyr::summarize(pearson = signif(cor(truth, count, method = "pearson", 
+                                           use = "pairwise.complete.obs"), 3),
+                      spearman = signif(cor(truth, count, method = "spearman", 
+                                            use = "pairwise.complete.obs"), 3))
+   png(gsub("\\.rds$", "_genes.png", outrds), width = 12, height = 12, 
+       unit = "in", res = 300)
+   print(ggplot(mergedgene, 
+                aes(x = truth, y = count)) + 
+           geom_abline(slope = 1, intercept = 0) + ggtitle("Gene") + 
+           geom_point(alpha = 0.3, size = 0.5, aes(color = modified_gene)) + theme_bw() + 
+           geom_label(data = corrsgene, x = -Inf, y = Inf, hjust = -0.05, vjust = 1.1, 
+                      aes(label = paste0("Pearson: ", pearson, "\nSpearman: ", spearman))) + 
+           facet_wrap(~ method) + xlab("True count") + ylab("Estimated count"))
+   dev.off()
+   
+   ## Pairs plot
+   png(gsub("\\.rds$", "_transcripts_pairs_withmod.png", outrds), width = 12, height = 12,
+       unit = "in", res = 300)
+   toplot <- merged %>% dplyr::select(-gene, -truth) %>% 
+     tidyr::spread(method, count) %>% dplyr::select(-transcript) %>%
+     dplyr::mutate(modified_gene = as.factor(modified_gene))
+   print(ggpairs(toplot, 
+                 columns = which(colnames(toplot) != "modified_gene"), 
+                 mapping = ggplot2::aes(colour = modified_gene),
+                 lower = list(continuous = wrap("points", alpha = 0.3, size = 0.25))) + 
+           theme_bw())
+   dev.off()
+   
+ }
> 
> saveRDS(NULL, file = outrds)
> date()
[1] "Tue Jun 19 11:29:51 2018"
> sessionInfo()
R Under development (unstable) (2017-12-14 r73916)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/R/R-devel/lib/libRblas.so
LAPACK: /usr/local/R/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2.2 GGally_1.3.2   cowplot_0.9.2  ggplot2_2.2.1  tidyr_0.8.0   
[6] dplyr_0.7.4   

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.16       bindr_0.1.1        magrittr_1.5       tidyselect_0.2.4  
 [5] munsell_0.4.3      colorspace_1.3-2   R6_2.2.2           rlang_0.2.0       
 [9] stringr_1.3.0      plyr_1.8.4         tools_3.5.0        grid_3.5.0        
[13] gtable_0.2.0       lazyeval_0.2.1     assertthat_0.2.0   tibble_1.4.2      
[17] reshape2_1.4.3     purrr_0.2.4        RColorBrewer_1.1-2 glue_1.2.0        
[21] labeling_0.3       stringi_1.1.7      compiler_3.5.0     pillar_1.2.1      
[25] scales_0.5.0       reshape_0.8.7      pkgconfig_2.0.1   
> 
> 
> proc.time()
   user  system elapsed 
354.572   3.800 358.690 
