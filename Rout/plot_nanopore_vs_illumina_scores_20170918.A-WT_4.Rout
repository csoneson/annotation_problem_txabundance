
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> ##                                                                            ##
> ## Plot scores from one method against those of all others                    ##
> ##                                                                            ##
> ## Inputs:                                                                    ##
> ## * scorerds: list containing abundance estimates and characteristics for    ##
> ##             junctions, transcripts and genes, as well as gene scores.      ##
> ##             Generated by calculate_gene_scores.R                           ##
> ## * targetmethod: method to which all other methods will be compared         ##
> ## * uniqjuncreadsthreshold: the total number of uniquely mapping junction    ##
> ##                           reads (in a gene), only genes with more than     ##
> ##                           this number will be used for the comparison      ##
> ## * outrds: output rds file. The name will be used to determine the name of  ##
> ##           the output figures.                                              ##
> ##                                                                            ##
> ## Outputs:                                                                   ##
> ## * A png figure comparing the scores of all methods to those of the target  ##
> ##   method                                                                   ##
> ## * A png figure summarizing the number of genes for which the target method ##
> ##   gives higher/lower/equal score compared to each other method             ##
> ## * For each method, a text file with the genes for which the target method  ##
> ##   gave a lower score                                                       ##
> ##                                                                            ##
> ################################################################################
> 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(scorerds)
[1] "output/20170918.A-WT_4_combined_coverages_with_scores.rds"
> print(targetmethod)
[1] "WubMinimap2Nanopore"
> print(uniqjuncreadsthreshold)
[1] 25
> print(outrds)
[1] "figures/correlation_between_nanopore_and_illumina_scores/correlation_between_nanopore_and_illumina_scores_20170918.A-WT_4.rds"
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(cowplot)
+ })
> 
> scores <- readRDS(scorerds)
> scores <- scores$genes
> 
> ## Consider only genes with uniqjuncreads > uniqjuncreadsthreshold
> tmpscore <- scores %>% dplyr::filter(uniqjuncreads > uniqjuncreadsthreshold) %>% 
+   dplyr::select(gene, method, score)
> scoresub <- tmpscore %>%
+   tidyr::spread(method, score) %>% as.data.frame() %>% 
+   tibble::column_to_rownames("gene")
> 
> png(gsub("rds$", "png", outrds), width = 8, height = 8, unit = "in", res = 300)
> plots <- lapply(setdiff(colnames(scoresub), targetmethod), function(cn) {
+   ggplot(scoresub, aes_string(x = cn, y = targetmethod)) + 
+     geom_abline(intercept = 0, slope = 1) + 
+     geom_point(alpha = 0.3, size = 0.3) + theme_bw()
+ })
> print(cowplot::plot_grid(plotlist = plots))
Warning messages:
1: Removed 48 rows containing missing values (geom_point). 
2: Removed 48 rows containing missing values (geom_point). 
3: Removed 48 rows containing missing values (geom_point). 
4: Removed 107 rows containing missing values (geom_point). 
5: Removed 881 rows containing missing values (geom_point). 
6: Removed 48 rows containing missing values (geom_point). 
7: Removed 48 rows containing missing values (geom_point). 
8: Removed 48 rows containing missing values (geom_point). 
> dev.off()
null device 
          1 
> 
> scorecomp <- tmpscore %>%
+   dplyr::left_join(tmpscore %>% dplyr::filter(method == targetmethod) %>%
+                      dplyr::select(gene, score) %>%
+                      dplyr::rename(targetscore = score)) %>%
+   dplyr::filter(method != targetmethod) %>%
+   dplyr::group_by(method) %>%
+   dplyr::summarize(ImNmorethanp5 = sum(score - targetscore >= 0.5, na.rm = TRUE),
+                    ImNbtw0andp5 = sum(score - targetscore > 0 & score - targetscore < 0.5, 
+                                      na.rm = TRUE),
+                    ImN0 = sum(score == targetscore, na.rm = TRUE),
+                    NmIbtw0andp5 = sum(score - targetscore < 0 & score - targetscore > (-0.5), 
+                                      na.rm = TRUE),
+                    NmImorethanp5 = sum(score - targetscore <= (-0.5), na.rm = TRUE)) %>%
+   tidyr::gather(category, nbr_genes, -method) %>%
+   dplyr::mutate(category = replace(category, category == "ImN0", sprintf("score = %s score", targetmethod)),
+                 category = replace(category, category == "ImNbtw0andp5", sprintf("0 < score - %s score < 0.5", 
+                                                                                  targetmethod)),
+                 category = replace(category, category == "ImNmorethanp5", sprintf("score - %s score >= 0.5",
+                                                                                   targetmethod)),
+                 category = replace(category, category == "NmIbtw0andp5", sprintf("0 < %s score - score < 0.5",
+                                                                                  targetmethod)),
+                 category = replace(category, category == "NmImorethanp5", sprintf("%s score - score >= 0.5",
+                                                                                   targetmethod))) %>%
+   dplyr::mutate(category = factor(category, levels = c(sprintf("%s score - score >= 0.5", targetmethod), 
+                                                        sprintf("0 < %s score - score < 0.5", targetmethod),
+                                                        sprintf("score = %s score", targetmethod),
+                                                        sprintf("0 < score - %s score < 0.5", targetmethod),
+                                                        sprintf("score - %s score >= 0.5", targetmethod))))
Joining, by = "gene"
> png(gsub("\\.rds$", "_summary.png", outrds), width = 8, height = 8,
+     unit = "in", res = 300)
> ggplot(scorecomp, aes(x = method, y = nbr_genes, fill = category)) + 
+   geom_bar(stat = "identity") + 
+   scale_fill_manual(values = structure(c("#000099", "#8080ff", "#ffc6b3",
+                                          "#ff6633", "#992600"), 
+                                        names = c(sprintf("%s score - score >= 0.5", targetmethod),
+                                                  sprintf("0 < %s score - score < 0.5", targetmethod),
+                                                  sprintf("score = %s score", targetmethod),
+                                                  sprintf("0 < score - %s score < 0.5", targetmethod),
+                                                  sprintf("score - %s score >= 0.5", targetmethod))), 
+                     name = "") + 
+   theme_bw() + xlab("") + ylab("Number or genes") + 
+   guides(fill = guide_legend(nrow = 3)) + theme(legend.position = "bottom")
> dev.off()
null device 
          1 
> 
> ## Write genes with lower score with the target method to files
> for (cn in setdiff(colnames(scoresub), targetmethod)) {
+   tmp <- scoresub[order(scoresub[, targetmethod] - scoresub[, cn]), ]
+   genes_to_write <- rownames(tmp)[which(tmp[, targetmethod] < tmp[, cn])]
+   write.table(scores %>% dplyr::filter(gene %in% genes_to_write & 
+                                          method %in% c(cn, targetmethod)) %>%
+                 dplyr::select(gene, method, count, length_diff_3putrs_samestart,
+                               exoncount, introncount, intron_exon_ratio,
+                               uniqjuncreads, mmjuncreads, uniqjuncfraction,
+                               nbr_junctions_in_gene, score) %>%
+                 tidyr::gather(variable, value, count, score) %>%
+                 tidyr::unite(temp, method, variable) %>%
+                 tidyr::spread(temp, value) %>%
+                 dplyr::mutate(gene = factor(gene, levels = genes_to_write)) %>%
+                 dplyr::arrange(gene),
+               file = gsub("\\.rds$", paste0("_", targetmethod, "_lowerthan_", cn, ".txt"), outrds),
+               row.names = FALSE, col.names = TRUE, quote = FALSE, sep = "\t")
+ }
> 
> saveRDS(NULL, file = outrds)
> date()
[1] "Tue Jul 24 17:06:01 2018"
> sessionInfo()
R Under development (unstable) (2017-12-14 r73916)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/R/R-devel/lib/libRblas.so
LAPACK: /usr/local/R/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2.2 cowplot_0.9.2  ggplot2_2.2.1  dplyr_0.7.4   

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.16     tidyr_0.8.0      digest_0.6.15    assertthat_0.2.0
 [5] plyr_1.8.4       grid_3.5.0       R6_2.2.2         gtable_0.2.0    
 [9] magrittr_1.5     scales_0.5.0     pillar_1.2.1     rlang_0.2.0     
[13] lazyeval_0.2.1   labeling_0.3     glue_1.2.0       purrr_0.2.4     
[17] munsell_0.4.3    compiler_3.5.0   colorspace_1.3-2 pkgconfig_2.0.1 
[21] tidyselect_0.2.4 bindr_0.1.1      tibble_1.4.2    
> 
> proc.time()
   user  system elapsed 
 39.824   0.716  40.576 
