
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(gene)
[1] "ENSG00000185658"
> print(bam)
[1] "STAR/20151016.A-Cortex_RNA/20151016.A-Cortex_RNA_Aligned.sortedByCoord.out.bam"
> print(bw)
[1] "STARbigwig/20151016.A-Cortex_RNA_Aligned.sortedByCoord.out.bw"
> print(genemodels)
[1] "alpine/alpine_genemodels.rds"
> print(quantsf)
[1] "salmon/cDNA/20151016.A-Cortex_RNA/quant.sf"
> print(biasmodels)
[1] "alpine/alpine_fitbiasmodel.rds"
> print(outrds)
[1] "alpine_out/ENSG00000185658.rds"
> 
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(alpine))
> suppressPackageStartupMessages(library(GenomicAlignments))
> suppressPackageStartupMessages(library(BSgenome.Hsapiens.NCBI.GRCh38))
> suppressPackageStartupMessages(library(ggplot2))
> suppressPackageStartupMessages(library(cowplot))
> suppressPackageStartupMessages(library(ggrepel))
> suppressPackageStartupMessages(library(grid))
> suppressPackageStartupMessages(library(gridExtra))
> 
> source("Rscripts/plot_tracks.R")
> 
> ## Read gene models for plot (pregenerated from gtf to save time)
> genemodels <- readRDS(genemodels)
> quantsf <- genemodels$quantsf
> 
> ## Read bias model parameters and gene models
> biasmodels <- readRDS(biasmodels)
> fitpar <- biasmodels$fitpar
> ebt0 <- biasmodels$ebt0
> txps <- biasmodels$txps
> 
> ## Estimate average fragment length
> avefraglength <- sum(fitpar$`1`$fraglen.density$x * fitpar$`1`$fraglen.density$y/sum(fitpar$`1`$fraglen.density$y))
> 
> ## Get transcripts for gene of interest
> txlist <- names(subset(txps, gene_id == gene))
> stopifnot(length(txlist) > 0)
> names(txlist) <- txlist
> 
> ## Load bam file 
> bam.files <- bam
> names(bam.files) <- "1"
> 
> ## Predict coverage for each transcript
> pred.cov <- lapply(txlist, function(tx) {
+   message(tx)
+   ## Get transcript model
+   txmod <- ebt0[[tx]]
+   
+   pc <- tryCatch({
+     m <- predictCoverage(gene = txmod,
+                          bam.files = bam.files,
+                          fitpar = fitpar,
+                          genome = Hsapiens,
+                          model.names = "all")
+     ## Scale predicted coverage to agree with Salmon's estimated count
+     m$`1`$pred.cov$all <- m$`1`$pred.cov$all/sum(m$`1`$pred.cov$all) * quantsf$NumReads[quantsf$Name == tx] * avefraglength
+     m
+   }, error = function(e) NULL)
+   pc
+ })
ENST00000333229
ENST00000446924
ENST00000342449
ENST00000380800
ENST00000491564
ENST00000424441
ENST00000473813
ENST00000445668
ENST00000430093
ENST00000445245
ENST00000455867
ENST00000412604
ENST00000496759
ENST00000341322
ENST00000470108
ENST00000484090
> 
> junctionlist <- lapply(txlist, function(tx) {
+   txmod <- sort(ebt0[[tx]])
+   junctions <- GenomicRanges::setdiff(range(txmod), txmod)
+   if (all(strand(txmod) == "+")) {
+     junctionpos <- cumsum(width(txmod))
+     junctionpos <- junctionpos[-length(junctionpos)]
+     junctioncov <- as.numeric(pred.cov[[tx]]$"1"$pred.cov$all)[junctionpos]
+   } else if (all(strand(txmod) == "-")) {
+     junctionpos <- cumsum(width(rev(txmod)))
+     junctionpos <- junctionpos[-length(junctionpos)]
+     junctioncov <- as.numeric(pred.cov[[tx]]$"1"$pred.cov$all)[junctionpos]
+     junctioncov <- rev(junctioncov)
+   } else {
+     stop("Unknown or mixed strand")
+   }
+   mcols(junctions)$coverage <- junctioncov
+   junctions
+ })
> 
> jl <- do.call(rbind, lapply(junctionlist, as.data.frame)) %>% 
+   dplyr::group_by(seqnames, start, end, width, strand) %>%
+   dplyr::summarize(coverage = sum(coverage, na.rm = TRUE)) %>% ungroup() %>%
+   dplyr::mutate(coverage = replace(coverage, is.na(coverage), 0))
> 
> jl <- dplyr::left_join(jl, genemodels$jcov) %>%
+   dplyr::mutate(uniqreads = replace(uniqreads, is.na(uniqreads), 0),
+                 mmreads = replace(mmreads, is.na(mmreads), 0)) %>%
+   dplyr::mutate(scaledcoverage = coverage/sum(coverage, na.rm = TRUE) * sum(uniqreads, na.rm = TRUE)) %>%
+   dplyr::mutate(junctionid = paste0("J", seq_len(length(scaledcoverage)))) %>%
+   dplyr::select(junctionid, everything())
Joining, by = c("seqnames", "start", "end", "strand")
Warning messages:
1: Column `seqnames` joining factor and character vector, coercing into character vector 
2: Column `strand` joining factor and character vector, coercing into character vector 
> 
> pdf(gsub("rds$", "pdf", outrds), width = 12, height = 10)
> tryCatch({
+   plot_tracks(mygene = gene, genemodels = genemodels$genemodels_exon, 
+               genemodels2 = genemodels$genemodels_cds, 
+               gtf_file = NULL, rnaseq_datafiles = structure(bw, names = "s1"), 
+               rnaseq_condition = structure("g1", names = "s1"), show_chr = NULL, 
+               min_coord = NULL, max_coord = NULL, 
+               pdf_filename = NULL, pdf_width = 7, pdf_height = 7)
+ }, error = function(e) message(e))
> 
> grid.newpage()
> grid.table(quantsf %>% dplyr::filter(Name %in% txlist))
> 
> grid.newpage()
> grid.table(jl %>% dplyr::select(junctionid, seqnames, start, end, width, strand, 
+                                 uniqreads, mmreads, scaledcoverage))
> 
> print(ggplot(jl, aes(x = scaledcoverage, y = uniqreads, label = junctionid)) + 
+         geom_point(size = 4) + geom_label_repel() + 
+         geom_abline(intercept = 0, slope = 1) + 
+         ggtitle(paste0("score = ", round(sum(abs(jl$uniqreads - jl$scaledcoverage), 
+                                                  na.rm = TRUE)/sum(jl$uniqreads, na.rm = TRUE), 2))) + 
+         xlab("Scaled predicted coverage") + ylab("Number of uniquely mapped reads"))
> dev.off()
null device 
          1 
> 
> # print(sort(fit$residuals))
> write.table(jl %>% dplyr::mutate(difference = uniqreads - scaledcoverage) %>%
+   dplyr::mutate(ranking = order(order(difference))) %>%
+     dplyr::mutate(coverage = round(coverage, 2),
+                   scaledcoverage = round(scaledcoverage, 2),
+                   difference = round(difference, 2)), 
+   file = gsub("rds$", "txt", outrds),
+   quote = FALSE, row.names = FALSE, col.names = TRUE, sep = "\t")
> print(as.data.frame(jl))
   junctionid seqnames    start      end width strand    coverage uniqreads
1          J1       21 39187418 39196497  9080      -  69.7496239        16
2          J2       21 39194752 39196497  1746      -   0.1334553         2
3          J3       21 39197416 39198762  1347      - 101.0893024        55
4          J4       21 39199663 39200218   556      -  95.7194005        39
5          J5       21 39200387 39202324  1938      -  91.4161632        28
6          J6       21 39202546 39206107  3562      - 117.8603781        39
7          J7       21 39206275 39209994  3720      -  93.4599570        40
8          J8       21 39210148 39210785   638      - 120.2713248        48
9          J9       21 39210148 39210865   718      -   0.0000000         0
10        J10       21 39210148 39212665  2518      -   0.0000000         0
11        J11       21 39210930 39212665  1736      - 131.8137894        27
12        J12       21 39212708 39213480   773      - 115.0030754        28
13        J13       21 39213554 39215236  1683      -  91.0271217        23
14        J14       21 39215363 39218151  2789      - 108.9130371        31
15        J15       21 39215363 39218528  3166      -   0.0000000         0
16        J16       21 39218273 39218504   232      - 112.6961413        34
17        J17       21 39218661 39224407  5747      - 133.5381122        24
18        J18       21 39224470 39225085   616      - 110.4574975        24
19        J19       21 39225198 39228499  3302      -  99.2035744        26
20        J20       21 39228583 39229311   729      - 100.1685386        28
21        J21       21 39229437 39232176  2740      - 103.4516096        37
22        J22       21 39232285 39232372    88      - 105.5158452        27
23        J23       21 39232499 39236594  4096      - 116.9887285        26
24        J24       21 39236785 39238478  1694      - 135.7817459        17
25        J25       21 39238574 39247700  9127      - 139.1190710        20
26        J26       21 39238574 39250795 12222      -   0.0000000         0
27        J27       21 39247833 39250795  2963      - 113.4879994        23
28        J28       21 39250890 39255644  4755      -  87.0328038        17
29        J29       21 39250890 39255664  4775      -   0.1250435         1
30        J30       21 39250890 39258486  7597      -   0.0000000         0
31        J31       21 39255829 39258486  2658      -  80.6221803        19
32        J32       21 39258673 39264459  5787      - 101.5143112        23
33        J33       21 39264565 39264890   326      -   0.0000000         0
34        J34       21 39264686 39264890   205      -  87.7577119        34
35        J35       21 39264686 39264985   300      -   0.2670822         0
36        J36       21 39265020 39269898  4879      -  89.7140098        21
37        J37       21 39270034 39270282   249      - 109.5729715        30
38        J38       21 39270434 39274373  3940      -  94.4883304        14
39        J39       21 39274473 39276172  1700      - 109.8906248        25
40        J40       21 39276214 39277250  1037      -  93.5419310        28
41        J41       21 39277352 39278742  1391      -  67.4875533        13
42        J42       21 39278814 39280147  1334      -  56.1884347        15
43        J43       21 39280249 39293810 13562      -  50.5366367        32
44        J44       21 39294033 39295742  1710      -  56.7991752        18
45        J45       21 39295904 39296264   361      -  55.6334216        29
46        J46       21 39296364 39298431  2068      -  57.0937519        13
47        J47       21 39298583 39312840 14258      - 673.9058808       708
48        J48       21 39312901 39313071   171      - 363.4885678       266
49        J49       21 39313102 39313240   139      - 200.1177873       152
50        J50       21 39313300 39313442   143      -  68.4538672        43
51        J51       21 39313300 39321025  7726      -   6.5753273         0
   mmreads scaledcoverage
1        0    30.67882708
2        0     0.05869929
3        0    44.46333979
4        0    42.10143042
5        0    40.20868512
6        2    51.83996643
7        0    41.10763184
8        0    52.90040251
9        0     0.00000000
10       0     0.00000000
11       0    57.97726535
12       0    50.58320416
13       0    40.03756827
14       0    47.90454839
15       0     0.00000000
16       0    49.56851720
17       0    58.73569528
18       0    48.58386724
19       0    43.63391710
20       0    44.05834906
21       0    45.50238216
22       0    46.41032010
23       0    51.45657817
24       0    59.72254003
25       0    61.19043640
26       0     0.00000000
27       0    49.91680981
28       0    38.28069873
29       0     0.05499940
30       0     0.00000000
31       0    35.46103606
32       0    44.65027660
33       0     0.00000000
34       0    38.59954389
35       0     0.11747401
36       0    39.46000626
37       0    48.19481537
38       0    41.55995386
39       0    48.33453272
40       0    41.14368746
41       0    29.68387301
42       0    24.71404399
43       0    22.22814479
44       0    24.98267343
45       0    24.46992579
46       0    25.11224069
47       0   296.41223619
48       0   159.87760645
49       0    88.02024514
50       0    30.10889864
51       0     2.89210635
> 
> saveRDS(NULL, outrds)
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
 [1] grid      stats4    parallel  stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
 [1] bindrcpp_0.2                          
 [2] Gviz_1.20.0                           
 [3] gridExtra_2.3                         
 [4] ggrepel_0.7.0                         
 [5] cowplot_0.8.0                         
 [6] ggplot2_2.2.1                         
 [7] BSgenome.Hsapiens.NCBI.GRCh38_1.3.1000
 [8] BSgenome_1.44.2                       
 [9] rtracklayer_1.36.4                    
[10] GenomicAlignments_1.12.2              
[11] Rsamtools_1.28.0                      
[12] Biostrings_2.44.2                     
[13] XVector_0.16.0                        
[14] SummarizedExperiment_1.6.5            
[15] DelayedArray_0.2.7                    
[16] matrixStats_0.52.2                    
[17] Biobase_2.36.2                        
[18] GenomicRanges_1.28.5                  
[19] GenomeInfoDb_1.12.2                   
[20] IRanges_2.10.3                        
[21] S4Vectors_0.14.5                      
[22] BiocGenerics_0.22.0                   
[23] alpine_1.2.0                          
[24] dplyr_0.7.4                           

loaded via a namespace (and not attached):
 [1] ProtGenerics_1.8.0            bitops_1.0-6                 
 [3] bit64_0.9-7                   RColorBrewer_1.1-2           
 [5] httr_1.3.1                    tools_3.4.0                  
 [7] backports_1.1.1               R6_2.2.2                     
 [9] rpart_4.1-11                  Hmisc_4.0-3                  
[11] DBI_0.7                       lazyeval_0.2.0               
[13] colorspace_1.3-2              nnet_7.3-12                  
[15] curl_2.8.1                    bit_1.1-12                   
[17] compiler_3.4.0                graph_1.54.0                 
[19] htmlTable_1.9                 labeling_0.3                 
[21] scales_0.5.0                  checkmate_1.8.4              
[23] RBGL_1.52.0                   speedglm_0.3-2               
[25] stringr_1.2.0                 digest_0.6.12                
[27] foreign_0.8-69                base64enc_0.1-3              
[29] dichromat_2.0-0               pkgconfig_2.0.1              
[31] htmltools_0.3.6               ensembldb_2.0.4              
[33] htmlwidgets_0.9               rlang_0.1.2                  
[35] RSQLite_2.0                   BiocInstaller_1.26.1         
[37] shiny_1.0.5                   bindr_0.1                    
[39] BiocParallel_1.10.1           acepack_1.4.1                
[41] VariantAnnotation_1.22.3      RCurl_1.95-4.8               
[43] magrittr_1.5                  GenomeInfoDbData_0.99.0      
[45] Formula_1.2-2                 Matrix_1.2-11                
[47] Rcpp_0.12.13                  munsell_0.4.3                
[49] stringi_1.1.5                 yaml_2.1.14                  
[51] MASS_7.3-47                   zlibbioc_1.22.0              
[53] plyr_1.8.4                    AnnotationHub_2.8.2          
[55] blob_1.1.0                    lattice_0.20-35              
[57] splines_3.4.0                 GenomicFeatures_1.28.5       
[59] knitr_1.17                    biomaRt_2.32.1               
[61] XML_3.98-1.9                  glue_1.1.1                   
[63] biovizBase_1.24.0             latticeExtra_0.6-28          
[65] data.table_1.10.4             httpuv_1.3.5                 
[67] gtable_0.2.0                  assertthat_0.2.0             
[69] mime_0.5                      xtable_1.8-2                 
[71] AnnotationFilter_1.0.0        survival_2.41-3              
[73] tibble_1.3.4                  AnnotationDbi_1.38.2         
[75] memoise_1.1.0                 cluster_2.0.6                
[77] interactiveDisplayBase_1.14.0
> date()
[1] "Wed Nov  1 20:59:17 2017"
> 
> 
> proc.time()
   user  system elapsed 
492.849  32.537 528.416 
