
R Under development (unstable) (2017-12-14 r73916) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> ##                                                                            ##
> ## Compare scores obtained with different annotations as basis                ##
> ##                                                                            ##
> ## Inputs:                                                                    ##
> ## * genecharensembl: data frame with gene characteristics, for the Ensembl   ##
> ##                    annotation.                                             ##
> ## * genecharchess: data frame with gene characteristics, for the CHESS       ##
> ##                  annotation.                                               ##
> ## * convtablechess: conversion table for CHESS genes.                        ##
> ## * outrds: output rds file. The name will be used to determine the name of  ##
> ##           the output figures.                                              ##
> ##                                                                            ##
> ## Outputs:                                                                   ##
> ## * png figures comparing characteristics of the two annotation catalogs     ##
> ##                                                                            ##
> ################################################################################
> 
> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(genecharensembl)
[1] "output/gene_characteristics.rds"
> print(genecharchess)
[1] "output/gene_characteristics_chess.rds"
> print(convtablechess)
[1] "reference_chess/chess2.0_assembly_fixed_tx2gene_withsymbol.rds"
> print(outrds)
[1] "figures/ensembl_vs_chess_annotation_characteristics/ensembl_vs_chess_annotation_characteristics.rds"
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(tidyr)
+   library(ggplot2)
+   library(cowplot)
+ })
> 
> chess <- readRDS(genecharchess)
> ensembl <- readRDS(genecharensembl)
> chessconversion <- readRDS(convtablechess)
> 
> df <- rbind(
+   chess %>% 
+     dplyr::select(gene_id, nbr_transcripts, median_transcript_length,
+                   max_transcript_length, min_transcript_length,
+                   median_nbr_exons_per_tx, max_nbr_exons_per_tx,
+                   min_nbr_exons_per_tx) %>% 
+     dplyr::mutate(annotation = "CHESS"),
+   ensembl %>% 
+     dplyr::select(gene_id, nbr_transcripts, median_transcript_length,
+                   max_transcript_length, min_transcript_length,
+                   median_nbr_exons_per_tx, max_nbr_exons_per_tx,
+                   min_nbr_exons_per_tx) %>% 
+     dplyr::mutate(annotation = "Ensembl"))
> 
> ## Number of transcripts per gene
> png(gsub("\\.rds$", "_nbrtxpergene.png", outrds), width = 8, height = 6, 
+     unit = "in", res = 400)
> ggplot(df %>% dplyr::mutate(nbr_transcripts = replace(nbr_transcripts, nbr_transcripts > 30, 30)), 
+        aes(x = nbr_transcripts, fill = annotation)) +
+   geom_bar(position = "dodge") + scale_y_sqrt() + 
+   xlab("Number of transcripts per gene") + ylab("Number of genes") + 
+   scale_fill_manual(values = c(CHESS = "#B17BA6", Ensembl = "#90C987"), name = "") + 
+   theme_bw() + theme(legend.position = "bottom")
> dev.off()
null device 
          1 
> 
> ## Median transcript length
> png(gsub("\\.rds$", "_mediantxlength.png", outrds), width = 8, height = 6, 
+     unit = "in", res = 400)
> ggplot(df, aes(x = median_transcript_length, color = annotation)) +
+   geom_line(stat = "density", size = 1.5) + scale_x_sqrt() + 
+   xlab("Median transcript length per gene") + ylab("Density") + 
+   scale_color_manual(values = c(CHESS = "#B17BA6", Ensembl = "#90C987"), name = "") + 
+   theme_bw() + theme(legend.position = "bottom")
> dev.off()
null device 
          1 
> 
> ## Min transcript length
> png(gsub("\\.rds$", "_mintxlength.png", outrds), width = 8, height = 6, 
+     unit = "in", res = 400)
> ggplot(df, aes(x = min_transcript_length, color = annotation)) +
+   geom_line(stat = "density", size = 1.5) + scale_x_sqrt() + 
+   xlab("Minimum transcript length per gene") + ylab("Density") + 
+   scale_color_manual(values = c(CHESS = "#B17BA6", Ensembl = "#90C987"), name = "") + 
+   theme_bw() + theme(legend.position = "bottom")
> dev.off()
null device 
          1 
> 
> ## Max transcript length
> png(gsub("\\.rds$", "_maxtxlength.png", outrds), width = 8, height = 6, 
+     unit = "in", res = 400)
> ggplot(df, aes(x = max_transcript_length, color = annotation)) +
+   geom_line(stat = "density", size = 1.5) + scale_x_sqrt() + 
+   xlab("Maximum transcript length per gene") + ylab("Density") + 
+   scale_color_manual(values = c(CHESS = "#B17BA6", Ensembl = "#90C987"), name = "") + 
+   theme_bw() + theme(legend.position = "bottom")
> dev.off()
null device 
          1 
> 
> ## Number of transcripts for the "same" gene in the two annotations
> df2 <- chess %>% 
+   dplyr::left_join(chessconversion %>% dplyr::select(gene, symbol) 
+                    %>% dplyr::distinct(), by = c("gene_id" = "gene")) %>%
+   dplyr::mutate(nbr_transcripts_chess = nbr_transcripts,
+                 median_transcript_length_chess = median_transcript_length) %>%
+   dplyr::select(symbol, nbr_transcripts_chess, median_transcript_length_chess) %>%
+   dplyr::inner_join(ensembl %>% 
+                       dplyr::mutate(nbr_transcripts_ensembl = nbr_transcripts,
+                                     median_transcript_length_ensembl = median_transcript_length) %>%
+                       dplyr::select(gene_id, nbr_transcripts_ensembl, median_transcript_length_ensembl),
+                     by = c("symbol" = "gene_id"))
> png(gsub("\\.rds$", "_nbrtxpergene_shared_genes.png", outrds),
+     width = 8, height = 6, unit = "in", res = 400)
> ggplot(df2, aes(x = nbr_transcripts_chess, y = nbr_transcripts_ensembl)) + 
+   geom_abline(slope = 1, intercept = 0) + geom_point(alpha = 0.3, size = 1) + 
+   theme_bw() + xlab("Number of transcripts per gene (CHESS)") + 
+   ylab("Number of transcripts per gene (Ensembl)")
> dev.off()
null device 
          1 
> 
> png(gsub("\\.rds$", "_mediantxlength_shared_genes.png", outrds),
+     width = 8, height = 6, unit = "in", res = 400)
> ggplot(df2, aes(x = median_transcript_length_chess, y = median_transcript_length_ensembl)) + 
+   geom_abline(slope = 1, intercept = 0) + geom_point(alpha = 0.3, size = 1) + 
+   theme_bw() + xlab("Median transcript length per gene (CHESS)") + 
+   ylab("Median transcript length per gene (Ensembl)")
> dev.off()
null device 
          1 
> 
> saveRDS(NULL, file = outrds)
> date()
[1] "Mon Jun 18 16:54:32 2018"
> sessionInfo()
R Under development (unstable) (2017-12-14 r73916)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/R/R-devel/lib/libRblas.so
LAPACK: /usr/local/R/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2.2 cowplot_0.9.2  ggplot2_2.2.1  tidyr_0.8.0    dplyr_0.7.4   

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.16     digest_0.6.15    assertthat_0.2.0 plyr_1.8.4      
 [5] grid_3.5.0       R6_2.2.2         gtable_0.2.0     magrittr_1.5    
 [9] scales_0.5.0     pillar_1.2.1     rlang_0.2.0      lazyeval_0.2.1  
[13] labeling_0.3     glue_1.2.0       munsell_0.4.3    purrr_0.2.4     
[17] compiler_3.5.0   colorspace_1.3-2 pkgconfig_2.0.1  bindr_0.1.1     
[21] tibble_1.4.2    
> 
> proc.time()
   user  system elapsed 
 12.412   0.352  12.779 
