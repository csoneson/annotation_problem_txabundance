
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(cdnaquant)
[1] "salmon/cDNAncRNA/20170918.A-WT_4/quant.sf"
> print(cdsquant)
[1] "salmon/cds/20170918.A-WT_4/quant.sf"
> print(gtffile)
[1] "/home/Shared/data/annotation/Human/Ensembl_GRCh38.90/gtf/Homo_sapiens.GRCh38.90.gtf"
> print(tx2gene)
[1] "reference/Homo_sapiens.GRCh38.90_tx2gene.rds"
> print(bwfile)
[1] "STARbigwig/20170918.A-WT_4_Aligned.sortedByCoord.out.bw"
> print(outrds)
[1] "output/20170918.A-WT_4_cdna_vs_cds.rds"
> 
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(rtracklayer))
> suppressPackageStartupMessages(library(Gviz))
> source("Rscripts/plot_tracks.R")
> options(ucscChromosomeNames = FALSE)
> 
> ## Read cDNA quantifications
> cdna <- read.delim(cdnaquant, header = TRUE, as.is = TRUE)
> 
> ## Read CDS quantifications
> cds <- read.delim(cdsquant, header = TRUE, as.is = TRUE)
> 
> ## Read tx2gene
> tx2gene <- readRDS(tx2gene)
> 
> ## Add gene assignment
> cdna$gene <- tx2gene$gene[match(cdna$Name, tx2gene$tx)]
> cds$gene <- tx2gene$gene[match(cds$Name, tx2gene$tx)]
> 
> ## Calculate relative abundances
> cdna <- cdna %>% dplyr::group_by(gene) %>% 
+   dplyr::mutate(RelCount = NumReads/sum(NumReads))
> cds <- cds %>% dplyr::group_by(gene) %>% 
+   dplyr::mutate(RelCount = NumReads/sum(NumReads))
> 
> ## Find shared transcripts
> cdna <- cdna %>% dplyr::select(Name, gene, NumReads, RelCount) %>%
+   dplyr::rename(NumReadscDNA = NumReads, RelCountcDNA = RelCount)
> cds <- cds %>% dplyr::select(Name, gene, NumReads, RelCount) %>%
+   dplyr::rename(NumReadsCDS = NumReads, RelCountCDS = RelCount)
> 
> abundances <- dplyr::full_join(cdna, cds) %>% 
+   dplyr::mutate(MaxNumReads = pmax(NumReadscDNA, NumReadsCDS)) %>%
+   dplyr::group_by(gene) %>% 
+   dplyr::mutate(Ntx = length(gene)) %>%
+   dplyr::ungroup()
Joining, by = c("Name", "gene")
> 
> tophits <- abundances %>% dplyr::filter(MaxNumReads > 2000) %>% 
+   dplyr::filter(Ntx > 1) %>% 
+   dplyr::filter(abs(RelCountcDNA - RelCountCDS) > 0.9)
> 
> write.table(tophits, file = gsub("\\.rds$", "_topgenes.txt", outrds), row.names = FALSE,
+             col.names = TRUE, quote = FALSE, sep = "\t")
> 
> write.table(abundances %>% dplyr::filter(gene %in% unique(tophits$gene)) %>%
+               dplyr::arrange(gene), 
+             file = gsub("\\.rds$", "_topgenes_alltx.txt", outrds), row.names = FALSE,
+             col.names = TRUE, quote = FALSE, sep = "\t")
> 
> ## Plot coverage of top hits
> (geneids <- unique(gsub("\\.[0-9]+$", "", tophits$gene)))
  [1] "ENSG00000180879" "ENSG00000127022" "ENSG00000115944" "ENSG00000161016"
  [5] "ENSG00000160294" "ENSG00000156508" "ENSG00000197728" "ENSG00000281917"
  [9] "ENSG00000128272" "ENSG00000089335" "ENSG00000075415" "ENSG00000165916"
 [13] "ENSG00000150991" "ENSG00000158710" "ENSG00000229117" "ENSG00000082153"
 [17] "ENSG00000079246" "ENSG00000161057" "ENSG00000050438" "ENSG00000125743"
 [21] "ENSG00000160117" "ENSG00000154727" "ENSG00000121741" "ENSG00000197734"
 [25] "ENSG00000183207" "ENSG00000135414" "ENSG00000205323" "ENSG00000236222"
 [29] "ENSG00000106086" "ENSG00000055130" "ENSG00000138629" "ENSG00000167526"
 [33] "ENSG00000108468" "ENSG00000103510" "ENSG00000185591" "ENSG00000131469"
 [37] "ENSG00000173915" "ENSG00000147155" "ENSG00000145741" "ENSG00000196531"
 [41] "ENSG00000049239" "ENSG00000183495" "ENSG00000136448" "ENSG00000103275"
 [45] "ENSG00000115365" "ENSG00000082212" "ENSG00000022267" "ENSG00000101126"
 [49] "ENSG00000100883" "ENSG00000113494" "ENSG00000168385" "ENSG00000173517"
 [53] "ENSG00000138829" "ENSG00000161021" "ENSG00000110013" "ENSG00000149273"
 [57] "ENSG00000135404" "ENSG00000116678" "ENSG00000101158" "ENSG00000154723"
 [61] "ENSG00000140992" "ENSG00000125834" "ENSG00000015568" "ENSG00000206286"
 [65] "ENSG00000136478" "ENSG00000166432" "ENSG00000164611" "ENSG00000131242"
 [69] "ENSG00000100442" "ENSG00000002549" "ENSG00000154856" "ENSG00000108604"
 [73] "ENSG00000103876" "ENSG00000006634" "ENSG00000170889" "ENSG00000103316"
 [77] "ENSG00000181722" "ENSG00000189403" "ENSG00000174444" "ENSG00000133773"
 [81] "ENSG00000178295" "ENSG00000239672" "ENSG00000137411" "ENSG00000008282"
 [85] "ENSG00000057252" "ENSG00000168036" "ENSG00000083845" "ENSG00000167447"
 [89] "ENSG00000026025" "ENSG00000079785" "ENSG00000183258" "ENSG00000149328"
 [93] "ENSG00000110321" "ENSG00000221983" "ENSG00000138685" "ENSG00000108774"
 [97] "ENSG00000111581" "ENSG00000126756" "ENSG00000182199" "ENSG00000164930"
[101] "ENSG00000003147" "ENSG00000101210" "ENSG00000103415" "ENSG00000243678"
[105] "ENSG00000088986" "ENSG00000092140" "ENSG00000136541" "ENSG00000164889"
[109] "ENSG00000090520" "ENSG00000089289" "ENSG00000182899" "ENSG00000179222"
[113] "ENSG00000092203" "ENSG00000135821" "ENSG00000113387" "ENSG00000157212"
[117] "ENSG00000101407" "ENSG00000111669" "ENSG00000102572" "ENSG00000176105"
[121] "ENSG00000121864" "ENSG00000198646" "ENSG00000110880" "ENSG00000204256"
[125] "ENSG00000128512" "ENSG00000127946" "ENSG00000112759" "ENSG00000215472"
[129] "ENSG00000143549" "ENSG00000102226" "ENSG00000122958" "ENSG00000242265"
[133] "ENSG00000116670" "ENSG00000122299" "ENSG00000167996" "ENSG00000111716"
[137] "ENSG00000170627" "ENSG00000143947" "ENSG00000273749" "ENSG00000061676"
[141] "ENSG00000181222" "ENSG00000174720" "ENSG00000069667" "ENSG00000151461"
[145] "ENSG00000068366" "ENSG00000136247" "ENSG00000266338" "ENSG00000196369"
[149] "ENSG00000235657" "ENSG00000166402" "ENSG00000085982" "ENSG00000170634"
[153] "ENSG00000167553" "ENSG00000186416" "ENSG00000175197" "ENSG00000071894"
[157] "ENSG00000149923" "ENSG00000041357" "ENSG00000160200" "ENSG00000181061"
[161] "ENSG00000179195" "ENSG00000196950" "ENSG00000135912" "ENSG00000136997"
[165] "ENSG00000176624" "ENSG00000171848" "ENSG00000135390"
> 
> genemodels_exon <- create_genemodels(gtffile, seltype = "exon")
> genemodels_cds <- create_genemodels(gtffile, seltype = "CDS")
> 
> pdf(gsub("rds$", "pdf", outrds), width = 12, height = 8)
> for (gid in geneids) {
+   message(gid)
+   tryCatch({
+     plot_tracks(mygene = gid, genemodels = genemodels_exon, 
+                 genemodels2 = genemodels_cds, 
+                 gtf_file = NULL, rnaseq_datafiles = structure(bwfile, names = "s1"), 
+                 rnaseq_condition = structure("g1", names = "s1"), show_chr = NULL, 
+                 min_coord = NULL, max_coord = NULL, 
+                 pdf_filename = NULL, pdf_width = 7, pdf_height = 7)
+   }, error = function(e) message(e))
+ }
ENSG00000180879
ENSG00000127022
ENSG00000115944
ENSG00000161016
ENSG00000160294
ENSG00000156508
ENSG00000197728
ENSG00000281917
solving row 1: range cannot be determined from the supplied arguments (too many NAs)ENSG00000128272
ENSG00000089335
ENSG00000075415
ENSG00000165916
ENSG00000150991
ENSG00000158710
ENSG00000229117
ENSG00000082153
ENSG00000079246
ENSG00000161057
ENSG00000050438
ENSG00000125743
ENSG00000160117
ENSG00000154727
ENSG00000121741
ENSG00000197734
ENSG00000183207
ENSG00000135414
ENSG00000205323
ENSG00000236222
solving row 1: range cannot be determined from the supplied arguments (too many NAs)ENSG00000106086
ENSG00000055130
ENSG00000138629
ENSG00000167526
ENSG00000108468
ENSG00000103510
ENSG00000185591
ENSG00000131469
ENSG00000173915
ENSG00000147155
ENSG00000145741
ENSG00000196531
ENSG00000049239
ENSG00000183495
ENSG00000136448
ENSG00000103275
ENSG00000115365
ENSG00000082212
ENSG00000022267
ENSG00000101126
ENSG00000100883
ENSG00000113494
ENSG00000168385
ENSG00000173517
ENSG00000138829
ENSG00000161021
ENSG00000110013
ENSG00000149273
ENSG00000135404
ENSG00000116678
ENSG00000101158
ENSG00000154723
ENSG00000140992
ENSG00000125834
ENSG00000015568
ENSG00000206286
solving row 1: range cannot be determined from the supplied arguments (too many NAs)ENSG00000136478
ENSG00000166432
ENSG00000164611
ENSG00000131242
ENSG00000100442
ENSG00000002549
ENSG00000154856
ENSG00000108604
ENSG00000103876
ENSG00000006634
ENSG00000170889
ENSG00000103316
ENSG00000181722
ENSG00000189403
ENSG00000174444
ENSG00000133773
ENSG00000178295
ENSG00000239672
ENSG00000137411
ENSG00000008282
ENSG00000057252
ENSG00000168036
ENSG00000083845
ENSG00000167447
ENSG00000026025
ENSG00000079785
ENSG00000183258
ENSG00000149328
ENSG00000110321
ENSG00000221983
ENSG00000138685
ENSG00000108774
ENSG00000111581
ENSG00000126756
ENSG00000182199
ENSG00000164930
ENSG00000003147
ENSG00000101210
ENSG00000103415
ENSG00000243678
ENSG00000088986
ENSG00000092140
ENSG00000136541
ENSG00000164889
ENSG00000090520
ENSG00000089289
ENSG00000182899
ENSG00000179222
ENSG00000092203
ENSG00000135821
ENSG00000113387
ENSG00000157212
ENSG00000101407
ENSG00000111669
ENSG00000102572
ENSG00000176105
ENSG00000121864
ENSG00000198646
ENSG00000110880
ENSG00000204256
ENSG00000128512
ENSG00000127946
ENSG00000112759
ENSG00000215472
ENSG00000143549
ENSG00000102226
ENSG00000122958
ENSG00000242265
ENSG00000116670
ENSG00000122299
ENSG00000167996
ENSG00000111716
ENSG00000170627
ENSG00000143947
ENSG00000273749
ENSG00000061676
ENSG00000181222
ENSG00000174720
ENSG00000069667
ENSG00000151461
ENSG00000068366
ENSG00000136247
ENSG00000266338
ENSG00000196369
ENSG00000235657
solving row 1: range cannot be determined from the supplied arguments (too many NAs)ENSG00000166402
ENSG00000085982
ENSG00000170634
ENSG00000167553
ENSG00000186416
ENSG00000175197
ENSG00000071894
ENSG00000149923
ENSG00000041357
ENSG00000160200
ENSG00000181061
ENSG00000179195
ENSG00000196950
ENSG00000135912
ENSG00000136997
ENSG00000176624
ENSG00000171848
ENSG00000135390
There were 50 or more warnings (use warnings() to see the first 50)
> dev.off()
null device 
          1 
> 
> saveRDS(list(abundances = abundances, tophits = tophits), file = outrds)
> 
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
 [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
 [1] grid      parallel  stats4    stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2         Gviz_1.20.0          rtracklayer_1.36.4  
[4] GenomicRanges_1.28.5 GenomeInfoDb_1.12.2  IRanges_2.10.3      
[7] S4Vectors_0.14.5     BiocGenerics_0.22.0  dplyr_0.7.4         

loaded via a namespace (and not attached):
 [1] httr_1.3.1                    Biobase_2.36.2               
 [3] AnnotationHub_2.8.2           bit64_0.9-7                  
 [5] splines_3.4.0                 shiny_1.0.5                  
 [7] Formula_1.2-2                 assertthat_0.2.0             
 [9] interactiveDisplayBase_1.14.0 latticeExtra_0.6-28          
[11] blob_1.1.0                    BSgenome_1.44.2              
[13] GenomeInfoDbData_0.99.0       Rsamtools_1.28.0             
[15] yaml_2.1.14                   RSQLite_2.0                  
[17] backports_1.1.1               lattice_0.20-35              
[19] biovizBase_1.24.0             glue_1.1.1                   
[21] digest_0.6.12                 RColorBrewer_1.1-2           
[23] XVector_0.16.0                checkmate_1.8.4              
[25] colorspace_1.3-2              httpuv_1.3.5                 
[27] htmltools_0.3.6               Matrix_1.2-11                
[29] plyr_1.8.4                    XML_3.98-1.9                 
[31] pkgconfig_2.0.1               biomaRt_2.32.1               
[33] zlibbioc_1.22.0               xtable_1.8-2                 
[35] scales_0.5.0                  BiocParallel_1.10.1          
[37] htmlTable_1.9                 tibble_1.3.4                 
[39] AnnotationFilter_1.0.0        ggplot2_2.2.1                
[41] GenomicFeatures_1.28.5        SummarizedExperiment_1.6.5   
[43] nnet_7.3-12                   lazyeval_0.2.0               
[45] mime_0.5                      survival_2.41-3              
[47] magrittr_1.5                  memoise_1.1.0                
[49] foreign_0.8-69                BiocInstaller_1.26.1         
[51] tools_3.4.0                   data.table_1.10.4            
[53] matrixStats_0.52.2            stringr_1.2.0                
[55] munsell_0.4.3                 cluster_2.0.6                
[57] DelayedArray_0.2.7            ensembldb_2.0.4              
[59] AnnotationDbi_1.38.2          Biostrings_2.44.2            
[61] compiler_3.4.0                rlang_0.1.2                  
[63] RCurl_1.95-4.8                dichromat_2.0-0              
[65] VariantAnnotation_1.22.3      htmlwidgets_0.9              
[67] bitops_1.0-6                  base64enc_0.1-3              
[69] gtable_0.2.0                  curl_2.8.1                   
[71] DBI_0.7                       R6_2.2.2                     
[73] GenomicAlignments_1.12.2      gridExtra_2.3                
[75] knitr_1.17                    bit_1.1-12                   
[77] bindr_0.1                     Hmisc_4.0-3                  
[79] ProtGenerics_1.8.0            stringi_1.1.5                
[81] Rcpp_0.12.13                  rpart_4.1-11                 
[83] acepack_1.4.1                
> date()
[1] "Fri Feb  2 00:40:50 2018"
> 
> proc.time()
   user  system elapsed 
838.871   4.893 845.287 
