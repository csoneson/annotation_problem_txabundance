
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in 1:length(args)) {
+   eval(parse(text = args[[i]]))
+ }
> 
> print(gene)  ## gene of interest, or file listing collection of genes (one per row)
[1] "gene_selection/20170918.A-WT_4/subset_genes_to_run.txt"
> print(bigwig)  ## bigwig file for visualization
[1] "STARbigwig/20170918.A-WT_4_Aligned.sortedByCoord.out.bw"
> print(genemodels)  ## gene models etc (output of alpine_prepare_for_comparison.R)
[1] "alpine/20170918.A-WT_4/alpine_genemodels.rds"
> print(ncores)  ## number of cores for parallel computations
[1] 25
> print(outdir)  ## output directory
[1] "alpine_out/20170918.A-WT_4"
> print(checkdir)  ## directory to write (empty) rds files (time stamps)
[1] "alpine_check/20170918.A-WT_4"
> 
> suppressPackageStartupMessages(library(dplyr))
> suppressPackageStartupMessages(library(ggplot2))
> suppressPackageStartupMessages(library(cowplot))
> suppressPackageStartupMessages(library(ggrepel))
> 
> source("Rscripts/plot_tracks.R")
> 
> ## Read gene models for Gviz plot (pregenerated from gtf to save time) and
> ## quantifications
> genemodels <- readRDS(genemodels)
> 
> ## Determine which gene(s) to investigate
> if (file.exists(gene)) {
+   genes <- unlist(read.delim(gene, as.is = TRUE, header = FALSE))
+ } else {
+   genes <- gene
+ }
> 
> ## Investigate each gene
> mclapply(genes, function(currgene) {
+   jl <- genemodels$jcovscaled %>% dplyr::filter(gene == currgene)
+ 
+   pdf(paste0(outdir, "/plots/", currgene, ".pdf"), width = 12, height = 10)
+   tryCatch({
+     plot_tracks(mygene = currgene, genemodels = genemodels$genemodels_exon, 
+                 genemodels2 = genemodels$genemodels_cds, 
+                 gtf_file = NULL, rnaseq_datafiles = structure(bigwig, names = "s1"), 
+                 rnaseq_condition = structure("g1", names = "s1"), show_chr = NULL, 
+                 min_coord = NULL, max_coord = NULL, 
+                 pdf_filename = NULL, pdf_width = 7, pdf_height = 7)
+   }, error = function(e) message(e))
+   
+   print(ggplot(jl, aes(x = scaledcoverage, y = uniqreads, label = junctionid)) + 
+           geom_point(size = 4) + geom_label_repel() +
+           facet_wrap(~ methodscore) + 
+           geom_abline(intercept = 0, slope = 1) + 
+           xlab("Scaled predicted coverage") + 
+           ylab("Number of uniquely mapped reads") + 
+           theme_bw())
+   dev.off()
+   
+   write.table(jl %>% dplyr::select(-score, -pred.cov, -method) %>%
+                 dplyr::mutate(scaledcoverage = round(scaledcoverage, 2)) %>% 
+                 tidyr::spread(methodscore, scaledcoverage) %>%
+                 dplyr::arrange(start),
+               file = paste0(outdir, "/jcov/", currgene, "_jscaledcov.txt"),
+               quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
+   
+   write.table(genemodels$allquants %>% dplyr::filter(gene == currgene) %>% 
+                 dplyr::select(transcript, method, TPM) %>%
+                 dplyr::mutate(TPM = round(TPM, 2)) %>% 
+                 tidyr::spread(method, TPM),
+               file = paste0(outdir, "/tpm/", currgene, "_tpm.txt"),
+               quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
+   
+   write.table(genemodels$allquants %>% dplyr::filter(gene == currgene) %>% 
+                 dplyr::select(transcript, method, count) %>%
+                 dplyr::mutate(count = round(count, 2)) %>% 
+                 tidyr::spread(method, count),
+               file = paste0(outdir, "/count/", currgene, "_count.txt"),
+               quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)
+   
+   saveRDS(jl, paste0(checkdir, "/", currgene, ".rds"))
+ }, mc.preschedule = FALSE, mc.cores = ncores)
$V11
NULL

$V12
NULL

$V13
NULL

$V14
NULL

$V15
NULL

$V16
NULL

$V17
NULL

$V18
NULL

$V19
NULL

$V110
NULL

$V111
NULL

$V112
NULL

$V113
NULL

$V114
NULL

$V115
NULL

$V116
NULL

> 
> saveRDS(NULL, paste0(checkdir, "/", basename(gene), ".rds"))
> sessionInfo()
R version 3.4.0 (2017-04-21)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /usr/local/R/R-3.4.0/lib/libRblas.so
LAPACK: /usr/local/R/R-3.4.0/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_CA.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_CA.UTF-8    
 [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_CA.UTF-8   
 [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
 [1] grid      parallel  stats4    stats     graphics  grDevices utils    
 [8] datasets  methods   base     

other attached packages:
 [1] Gviz_1.20.0          rtracklayer_1.36.4   GenomicRanges_1.28.5
 [4] GenomeInfoDb_1.12.2  IRanges_2.10.3       S4Vectors_0.14.5    
 [7] BiocGenerics_0.22.0  ggrepel_0.7.0        cowplot_0.8.0       
[10] ggplot2_2.2.1        dplyr_0.7.4         

loaded via a namespace (and not attached):
 [1] httr_1.3.1                    Biobase_2.36.2               
 [3] AnnotationHub_2.8.2           bit64_0.9-7                  
 [5] splines_3.4.0                 shiny_1.0.5                  
 [7] Formula_1.2-2                 assertthat_0.2.0             
 [9] interactiveDisplayBase_1.14.0 latticeExtra_0.6-28          
[11] blob_1.1.0                    BSgenome_1.44.2              
[13] GenomeInfoDbData_0.99.0       Rsamtools_1.28.0             
[15] yaml_2.1.14                   RSQLite_2.0                  
[17] backports_1.1.1               lattice_0.20-35              
[19] biovizBase_1.24.0             glue_1.1.1                   
[21] digest_0.6.12                 RColorBrewer_1.1-2           
[23] XVector_0.16.0                checkmate_1.8.4              
[25] colorspace_1.3-2              httpuv_1.3.5                 
[27] htmltools_0.3.6               Matrix_1.2-11                
[29] plyr_1.8.4                    XML_3.98-1.9                 
[31] pkgconfig_2.0.1               biomaRt_2.32.1               
[33] zlibbioc_1.22.0               xtable_1.8-2                 
[35] scales_0.5.0                  BiocParallel_1.10.1          
[37] htmlTable_1.9                 tibble_1.3.4                 
[39] AnnotationFilter_1.0.0        GenomicFeatures_1.28.5       
[41] SummarizedExperiment_1.6.5    nnet_7.3-12                  
[43] lazyeval_0.2.0                mime_0.5                     
[45] survival_2.41-3               magrittr_1.5                 
[47] memoise_1.1.0                 foreign_0.8-69               
[49] BiocInstaller_1.26.1          tools_3.4.0                  
[51] data.table_1.10.4             matrixStats_0.52.2           
[53] stringr_1.2.0                 munsell_0.4.3                
[55] cluster_2.0.6                 DelayedArray_0.2.7           
[57] ensembldb_2.0.4               AnnotationDbi_1.38.2         
[59] bindrcpp_0.2                  Biostrings_2.44.2            
[61] compiler_3.4.0                rlang_0.1.2                  
[63] RCurl_1.95-4.8                dichromat_2.0-0              
[65] VariantAnnotation_1.22.3      htmlwidgets_0.9              
[67] bitops_1.0-6                  base64enc_0.1-3              
[69] gtable_0.2.0                  curl_2.8.1                   
[71] DBI_0.7                       R6_2.2.2                     
[73] GenomicAlignments_1.12.2      gridExtra_2.3                
[75] knitr_1.17                    bit_1.1-12                   
[77] bindr_0.1                     Hmisc_4.0-3                  
[79] ProtGenerics_1.8.0            stringi_1.1.5                
[81] Rcpp_0.12.13                  rpart_4.1-11                 
[83] acepack_1.4.1                
> date()
[1] "Mon Nov 20 14:54:10 2017"
> 
> 
> proc.time()
   user  system elapsed 
309.077  47.438  82.425 
